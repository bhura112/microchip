

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Jun 07 16:42:27 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0088                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0014                     _SSPCON	set	20
   365  0013                     _SSPBUF	set	19
   366  0001                     _TMR0	set	1
   367  0006                     _PORTBbits	set	6
   368  0008                     _PORTD	set	8
   369  0008                     _PORTDbits	set	8
   370  0063                     _SSPIF	set	99
   371  005E                     _PEIE	set	94
   372  005F                     _GIE	set	95
   373  005D                     _TMR0IE	set	93
   374  005A                     _TMR0IF	set	90
   375  0093                     _SSPADD	set	147
   376  0091                     _SSPCON2	set	145
   377  0094                     _SSPSTAT	set	148
   378  0081                     _OPTION_REG	set	129
   379  0086                     _TRISBbits	set	134
   380  0088                     _TRISD	set	136
   381  043C                     _TRISC4	set	1084
   382  043B                     _TRISC3	set	1083
   383  048B                     _RCEN	set	1163
   384  048E                     _ACKSTAT	set	1166
   385  048C                     _ACKEN	set	1164
   386  048D                     _ACKDT	set	1165
   387  0489                     _RSEN	set	1161
   388  048A                     _PEN	set	1162
   389  0488                     _SEN	set	1160
   390                           
   391                           	psect	cinit
   392  000F                     start_initialization:	
   393                           ; #config settings
   394                           
   395  000F                     __initialization:
   396                           
   397                           ; Clear objects allocated to COMMON
   398  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   399  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   400                           
   401                           ; Clear objects allocated to BANK0
   402  0011  1283               	bcf	3,5	;RP0=0, select bank0
   403  0012  1303               	bcf	3,6	;RP1=0, select bank0
   404  0013  01B5               	clrf	__pbssBANK0& (0+127)
   405  0014  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   406  0015  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   407  0016  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   408  0017                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411  0017                     __end_of__initialization:
   412  0017  0183               	clrf	3
   413  0018  120A  118A  28B8   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMMON
   416  0079                     __pbssCOMMON:
   417  0079                     _delayMS:
   418  0079                     	ds	2
   419                           
   420                           	psect	bssBANK0
   421  0035                     __pbssBANK0:
   422  0035                     _ledBlinkTimeCounter:
   423  0035                     	ds	2
   424  0037                     _msCounts:
   425  0037                     	ds	2
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:
   429  0070                     ?_TIMER0_Initialize:
   430  0070                     ?_LCD_WriteNibble:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_LCD_WriteCmd:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_LCD_Initialize:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_timer0_isr:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_timer0_isr:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_I2C_CheckFlag:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_I2C_StartCond:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_I2C_StopCond:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_I2C_Write:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_main:	
   458                           ; 1 bytes @ 0x0
   459                           
   460                           
   461                           ; 2 bytes @ 0x0
   462  0070                     	ds	3
   463  0073                     ?_TIMER0_Delay:
   464  0073                     ??_TIMER0_Initialize:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     ??_LCD_WriteNibble:	
   468                           ; 1 bytes @ 0x3
   469                           
   470  0073                     ??_I2C_CheckFlag:	
   471                           ; 1 bytes @ 0x3
   472                           
   473  0073                     ??_I2C_StartCond:	
   474                           ; 1 bytes @ 0x3
   475                           
   476  0073                     ??_I2C_StopCond:	
   477                           ; 1 bytes @ 0x3
   478                           
   479  0073                     ??_I2C_Write:	
   480                           ; 1 bytes @ 0x3
   481                           
   482  0073                     ??___aldiv:	
   483                           ; 1 bytes @ 0x3
   484                           
   485  0073                     LCD_WriteNibble@chr:	
   486                           ; 1 bytes @ 0x3
   487                           
   488  0073                     I2C_Write@dat:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     TIMER0_Delay@ms:	
   492                           ; 1 bytes @ 0x3
   493                           
   494                           
   495                           ; 2 bytes @ 0x3
   496  0073                     	ds	1
   497  0074                     ??_I2C_Initialize:
   498  0074                     ?_I2C_WriteChar:	
   499                           ; 1 bytes @ 0x4
   500                           
   501  0074                     I2C_Initialize@mode:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     I2C_WriteChar@saddr:	
   505                           ; 1 bytes @ 0x4
   506                           
   507                           
   508                           ; 2 bytes @ 0x4
   509  0074                     	ds	1
   510  0075                     ??_TIMER0_Delay:
   511  0075                     ?_LCD_Write:	
   512                           ; 1 bytes @ 0x5
   513                           
   514  0075                     LCD_Write@chr:	
   515                           ; 1 bytes @ 0x5
   516                           
   517                           
   518                           ; 1 bytes @ 0x5
   519  0075                     	ds	1
   520  0076                     ??_LCD_Write:
   521  0076                     I2C_WriteChar@data:	
   522                           ; 1 bytes @ 0x6
   523                           
   524                           
   525                           ; 1 bytes @ 0x6
   526  0076                     	ds	1
   527  0077                     ??_I2C_WriteChar:
   528  0077                     LCD_Write@type:	
   529                           ; 1 bytes @ 0x7
   530                           
   531                           
   532                           ; 1 bytes @ 0x7
   533  0077                     	ds	1
   534  0078                     ??_LCD_WriteCmd:
   535                           
   536                           ; 1 bytes @ 0x8
   537  0078                     	ds	1
   538  0079                     ??_LCD_Initialize:
   539                           
   540                           	psect	cstackBANK0
   541  0020                     __pcstackBANK0:	
   542                           ; 1 bytes @ 0x9
   543                           
   544  0020                     ?___aldiv:
   545  0020                     LCD_WriteCmd@chr:	
   546                           ; 4 bytes @ 0x0
   547                           
   548  0020                     ___aldiv@divisor:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 4 bytes @ 0x0
   553  0020                     	ds	4
   554  0024                     ___aldiv@dividend:
   555                           
   556                           ; 4 bytes @ 0x4
   557  0024                     	ds	4
   558  0028                     ___aldiv@counter:
   559                           
   560                           ; 1 bytes @ 0x8
   561  0028                     	ds	1
   562  0029                     ___aldiv@sign:
   563                           
   564                           ; 1 bytes @ 0x9
   565  0029                     	ds	1
   566  002A                     ___aldiv@quotient:
   567                           
   568                           ; 4 bytes @ 0xA
   569  002A                     	ds	4
   570  002E                     ?_I2C_Initialize:
   571  002E                     I2C_Initialize@addr:	
   572                           ; 1 bytes @ 0xE
   573                           
   574                           
   575                           ; 1 bytes @ 0xE
   576  002E                     	ds	1
   577  002F                     I2C_Initialize@b_rate:
   578                           
   579                           ; 2 bytes @ 0xF
   580  002F                     	ds	2
   581  0031                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x11
   584  0031                     	ds	2
   585  0033                     main@Counter:
   586                           
   587                           ; 2 bytes @ 0x13
   588  0033                     	ds	2
   589                           
   590                           	psect	maintext
   591  00B8                     __pmaintext:	
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 24 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  Counter         2   19[BANK0 ] int 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  2   54[None  ] int 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : B00/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       2       0       0       0
   613 ;;      Temps:          0       2       0       0       0
   614 ;;      Totals:         0       4       0       0       0
   615 ;;Total ram usage:        4 bytes
   616 ;; Hardware stack levels required when called: 5
   617 ;; This function calls:
   618 ;;		_I2C_Initialize
   619 ;;		_I2C_WriteChar
   620 ;;		_LCD_Initialize
   621 ;;		_TIMER0_Delay
   622 ;;		_TIMER0_Initialize
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628  00B8                     _main:	
   629                           ;psect for function _main
   630                           
   631  00B8                     l1314:	
   632                           ;incstack = 0
   633                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   634                           
   635                           
   636                           ;main.c: 26:     TRISBbits.TRISB0 = 0;
   637  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   638  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   639  00BA  1006               	bcf	6,0	;volatile
   640  00BB                     l1316:
   641                           
   642                           ;main.c: 27:     PORTD = 0x00;
   643  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   644  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   645  00BD  0188               	clrf	8	;volatile
   646                           
   647                           ;main.c: 28:     TRISD = 0x00;
   648  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   649  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   650  00C0  0188               	clrf	8	;volatile
   651  00C1                     l1318:
   652                           
   653                           ;main.c: 30:     TIMER0_Initialize();
   654  00C1  120A  118A  22AE  120A  118A  	fcall	_TIMER0_Initialize
   655  00C6                     l1320:
   656                           
   657                           ;main.c: 32:     LCD_Initialize();
   658  00C6  120A  118A  2113  120A  118A  	fcall	_LCD_Initialize
   659  00CB                     l1322:
   660                           
   661                           ;main.c: 34:     I2C_Initialize(MASTER_MODE,0,100);
   662  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   663  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   664  00CD  01AE               	clrf	I2C_Initialize@addr
   665  00CE  3064               	movlw	100
   666  00CF  00AF               	movwf	I2C_Initialize@b_rate
   667  00D0  3000               	movlw	0
   668  00D1  00B0               	movwf	I2C_Initialize@b_rate+1
   669  00D2  3001               	movlw	1
   670  00D3  120A  118A  216D  120A  118A  	fcall	_I2C_Initialize
   671  00D8                     l1324:
   672                           
   673                           ;main.c: 35:     int Counter = 0;
   674  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   675  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   676  00DA  01B3               	clrf	main@Counter
   677  00DB  01B4               	clrf	main@Counter+1
   678  00DC                     l55:	
   679                           ;main.c: 36:     while(1)
   680                           
   681                           
   682                           ;main.c: 37:     {;main.c: 38:       I2C_WriteChar(0x40,Counter + 48);
   683  00DC  3040               	movlw	64
   684  00DD  00F4               	movwf	I2C_WriteChar@saddr
   685  00DE  3000               	movlw	0
   686  00DF  00F5               	movwf	I2C_WriteChar@saddr+1
   687  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   688  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   689  00E2  0833               	movf	main@Counter,w
   690  00E3  3E30               	addlw	48
   691  00E4  00B1               	movwf	??_main
   692  00E5  0831               	movf	??_main,w
   693  00E6  00F6               	movwf	I2C_WriteChar@data
   694  00E7  120A  118A  225D  120A  118A  	fcall	_I2C_WriteChar
   695  00EC                     l1326:
   696                           
   697                           ;main.c: 39:       if(Counter++ > 9)
   698  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   699  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   700  00EE  0834               	movf	main@Counter+1,w
   701  00EF  00B2               	movwf	??_main+1
   702  00F0  0833               	movf	main@Counter,w
   703  00F1  00B1               	movwf	??_main
   704  00F2  0AB3               	incf	main@Counter,f
   705  00F3  1903               	skipnz
   706  00F4  0AB4               	incf	main@Counter+1,f
   707  00F5  0832               	movf	??_main+1,w
   708  00F6  3A80               	xorlw	128
   709  00F7  00FF               	movwf	btemp+1
   710  00F8  3080               	movlw	128
   711  00F9  027F               	subwf	btemp+1,w
   712  00FA  1D03               	skipz
   713  00FB  28FE               	goto	u895
   714  00FC  300A               	movlw	10
   715  00FD  0231               	subwf	??_main,w
   716  00FE                     u895:
   717  00FE  1C03               	skipc
   718  00FF  2901               	goto	u891
   719  0100  2902               	goto	u890
   720  0101                     u891:
   721  0101  2906               	goto	l1330
   722  0102                     u890:
   723  0102                     l1328:
   724                           
   725                           ;main.c: 40:           Counter = 0;
   726  0102  1283               	bcf	3,5	;RP0=0, select bank0
   727  0103  1303               	bcf	3,6	;RP1=0, select bank0
   728  0104  01B3               	clrf	main@Counter
   729  0105  01B4               	clrf	main@Counter+1
   730  0106                     l1330:
   731                           
   732                           ;main.c: 41:       TIMER0_Delay(1000);
   733  0106  30E8               	movlw	232
   734  0107  00F3               	movwf	TIMER0_Delay@ms
   735  0108  3003               	movlw	3
   736  0109  00F4               	movwf	TIMER0_Delay@ms+1
   737  010A  120A  118A  2284  120A  118A  	fcall	_TIMER0_Delay
   738  010F  28DC               	goto	l55
   739  0110  120A  118A  280C   	ljmp	start
   740  0113                     __end_of_main:
   741                           
   742                           	psect	text1
   743  02AE                     __ptext1:	
   744 ;; *************** function _TIMER0_Initialize *****************
   745 ;; Defined at:
   746 ;;		line 33 in file "timer_dv.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0
   763 ;;      Totals:         0       0       0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774  02AE                     _TIMER0_Initialize:	
   775                           ;psect for function _TIMER0_Initialize
   776                           
   777  02AE                     l1104:	
   778                           ;incstack = 0
   779                           ; Regs used in _TIMER0_Initialize: [wreg]
   780                           
   781                           
   782                           ;timer_dv.c: 35:     OPTION_REG = (1 << 2);
   783  02AE  3004               	movlw	4
   784  02AF  1683               	bsf	3,5	;RP0=1, select bank1
   785  02B0  1303               	bcf	3,6	;RP1=0, select bank1
   786  02B1  0081               	movwf	1	;volatile
   787                           
   788                           ;timer_dv.c: 37:     TMR0 = (256 - (unsigned char)(((1 * 16000000)/1000)/((32*4))));
   789  02B2  3083               	movlw	131
   790  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   791  02B4  1303               	bcf	3,6	;RP1=0, select bank0
   792  02B5  0081               	movwf	1	;volatile
   793  02B6                     l1106:
   794                           
   795                           ;timer_dv.c: 39:     TMR0IE = 1;
   796  02B6  168B               	bsf	11,5	;volatile
   797  02B7                     l1108:
   798                           
   799                           ;timer_dv.c: 40:     GIE = 1;
   800  02B7  178B               	bsf	11,7	;volatile
   801  02B8                     l1110:
   802                           
   803                           ;timer_dv.c: 41:     PEIE = 1;
   804  02B8  170B               	bsf	11,6	;volatile
   805  02B9                     l96:
   806  02B9  0008               	return
   807  02BA                     __end_of_TIMER0_Initialize:
   808                           
   809                           	psect	text2
   810  0113                     __ptext2:	
   811 ;; *************** function _LCD_Initialize *****************
   812 ;; Defined at:
   813 ;;		line 56 in file "lcd_dv.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 4
   834 ;; This function calls:
   835 ;;		_LCD_WriteCmd
   836 ;;		_TIMER0_Delay
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842  0113                     _LCD_Initialize:	
   843                           ;psect for function _LCD_Initialize
   844                           
   845  0113                     l1260:	
   846                           ;incstack = 0
   847                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849                           
   850                           ;lcd_dv.c: 58:     TRISD = 0x00;
   851  0113  1683               	bsf	3,5	;RP0=1, select bank1
   852  0114  1303               	bcf	3,6	;RP1=0, select bank1
   853  0115  0188               	clrf	8	;volatile
   854  0116                     l1262:
   855                           
   856                           ;lcd_dv.c: 59:     PORTDbits.RD0 = 0;
   857  0116  1283               	bcf	3,5	;RP0=0, select bank0
   858  0117  1303               	bcf	3,6	;RP1=0, select bank0
   859  0118  1008               	bcf	8,0	;volatile
   860  0119                     l1264:
   861                           
   862                           ;lcd_dv.c: 60:     PORTDbits.RD1 = 0;
   863  0119  1088               	bcf	8,1	;volatile
   864  011A                     l1266:
   865                           
   866                           ;lcd_dv.c: 61:     PORTDbits.RD2 = 0;
   867  011A  1108               	bcf	8,2	;volatile
   868  011B                     l1268:
   869                           
   870                           ;lcd_dv.c: 63:     LCD_WriteCmd( 0x03);
   871  011B  3003               	movlw	3
   872  011C  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   873  0121                     l1270:
   874                           
   875                           ;lcd_dv.c: 64:     TIMER0_Delay(10);
   876  0121  300A               	movlw	10
   877  0122  00F3               	movwf	TIMER0_Delay@ms
   878  0123  3000               	movlw	0
   879  0124  00F4               	movwf	TIMER0_Delay@ms+1
   880  0125  120A  118A  2284  120A  118A  	fcall	_TIMER0_Delay
   881  012A                     l1272:
   882                           
   883                           ;lcd_dv.c: 65:     LCD_WriteCmd( 0x03);
   884  012A  3003               	movlw	3
   885  012B  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   886  0130                     l1274:
   887                           
   888                           ;lcd_dv.c: 66:     TIMER0_Delay(5);
   889  0130  3005               	movlw	5
   890  0131  00F3               	movwf	TIMER0_Delay@ms
   891  0132  3000               	movlw	0
   892  0133  00F4               	movwf	TIMER0_Delay@ms+1
   893  0134  120A  118A  2284  120A  118A  	fcall	_TIMER0_Delay
   894  0139                     l1276:
   895                           
   896                           ;lcd_dv.c: 67:     LCD_WriteCmd( 0x03);
   897  0139  3003               	movlw	3
   898  013A  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   899  013F                     l1278:
   900                           
   901                           ;lcd_dv.c: 68:     TIMER0_Delay(5);
   902  013F  3005               	movlw	5
   903  0140  00F3               	movwf	TIMER0_Delay@ms
   904  0141  3000               	movlw	0
   905  0142  00F4               	movwf	TIMER0_Delay@ms+1
   906  0143  120A  118A  2284  120A  118A  	fcall	_TIMER0_Delay
   907  0148                     l1280:
   908                           
   909                           ;lcd_dv.c: 69:     LCD_WriteCmd( 0x02);
   910  0148  3002               	movlw	2
   911  0149  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   912  014E                     l1282:
   913                           
   914                           ;lcd_dv.c: 70:     LCD_WriteCmd( 0x28);
   915  014E  3028               	movlw	40
   916  014F  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   917  0154                     l1284:
   918                           
   919                           ;lcd_dv.c: 73:     LCD_WriteCmd(0x0C);
   920  0154  300C               	movlw	12
   921  0155  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   922  015A                     l1286:
   923                           
   924                           ;lcd_dv.c: 74:     LCD_WriteCmd(0x06);
   925  015A  3006               	movlw	6
   926  015B  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   927  0160                     l1288:
   928                           
   929                           ;lcd_dv.c: 75:     LCD_WriteCmd(0x01);
   930  0160  3001               	movlw	1
   931  0161  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   932  0166                     l1290:
   933                           
   934                           ;lcd_dv.c: 76:     LCD_WriteCmd(0x80);
   935  0166  3080               	movlw	128
   936  0167  120A  118A  2293  120A  118A  	fcall	_LCD_WriteCmd
   937  016C                     l34:
   938  016C  0008               	return
   939  016D                     __end_of_LCD_Initialize:
   940                           
   941                           	psect	text3
   942  0293                     __ptext3:	
   943 ;; *************** function _LCD_WriteCmd *****************
   944 ;; Defined at:
   945 ;;		line 30 in file "lcd_dv.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  chr             1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  chr             1    0[BANK0 ] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, pclath, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       1       0       0       0
   961 ;;      Temps:          1       0       0       0       0
   962 ;;      Totals:         1       1       0       0       0
   963 ;;Total ram usage:        2 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 3
   966 ;; This function calls:
   967 ;;		_LCD_Write
   968 ;; This function is called by:
   969 ;;		_LCD_Initialize
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973  0293                     _LCD_WriteCmd:	
   974                           ;psect for function _LCD_WriteCmd
   975                           
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _LCD_WriteCmd: [wreg+status,2+status,0+pclath+cstack]
   979                           ;LCD_WriteCmd@chr stored from wreg
   980  0293  1283               	bcf	3,5	;RP0=0, select bank0
   981  0294  1303               	bcf	3,6	;RP1=0, select bank0
   982  0295  00A0               	movwf	LCD_WriteCmd@chr
   983  0296                     l1208:
   984                           
   985                           ;lcd_dv.c: 30: void LCD_WriteCmd(uint8_t chr);lcd_dv.c: 31: {;lcd_dv.c: 32:     LCD_Writ
      +                          e(0,chr);
   986  0296  0820               	movf	LCD_WriteCmd@chr,w
   987  0297  00F8               	movwf	??_LCD_WriteCmd
   988  0298  0878               	movf	??_LCD_WriteCmd,w
   989  0299  00F5               	movwf	LCD_Write@chr
   990  029A  3000               	movlw	0
   991  029B  120A  118A  21B8  120A  118A  	fcall	_LCD_Write
   992  02A0                     l19:
   993  02A0  0008               	return
   994  02A1                     __end_of_LCD_WriteCmd:
   995                           
   996                           	psect	text4
   997  01B8                     __ptext4:	
   998 ;; *************** function _LCD_Write *****************
   999 ;; Defined at:
  1000 ;;		line 13 in file "lcd_dv.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  type            1    wreg     unsigned char 
  1003 ;;  chr             1    5[COMMON] unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  type            1    7[COMMON] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         1       0       0       0       0
  1016 ;;      Locals:         1       0       0       0       0
  1017 ;;      Temps:          1       0       0       0       0
  1018 ;;      Totals:         3       0       0       0       0
  1019 ;;Total ram usage:        3 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 2
  1022 ;; This function calls:
  1023 ;;		_LCD_WriteNibble
  1024 ;;		_TIMER0_Delay
  1025 ;; This function is called by:
  1026 ;;		_LCD_WriteCmd
  1027 ;;		_LCD_WriteData
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031  01B8                     _LCD_Write:	
  1032                           ;psect for function _LCD_Write
  1033                           
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _LCD_Write: [wreg+status,2+status,0+pclath+cstack]
  1037                           ;LCD_Write@type stored from wreg
  1038  01B8  00F7               	movwf	LCD_Write@type
  1039  01B9                     l1196:
  1040                           
  1041                           ;lcd_dv.c: 13: void LCD_Write(uint8_t type,uint8_t chr);lcd_dv.c: 14: {;lcd_dv.c: 15:   
      +                            if(type == 0)
  1042  01B9  0877               	movf	LCD_Write@type,w
  1043  01BA  1D03               	btfss	3,2
  1044  01BB  29BD               	goto	u731
  1045  01BC  29BE               	goto	u730
  1046  01BD                     u731:
  1047  01BD  29C2               	goto	l14
  1048  01BE                     u730:
  1049  01BE                     l1198:
  1050                           
  1051                           ;lcd_dv.c: 16:         PORTDbits.RD0 = 0;
  1052  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1053  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1054  01C0  1008               	bcf	8,0	;volatile
  1055  01C1  29C5               	goto	l15
  1056  01C2                     l14:	
  1057                           ;lcd_dv.c: 17:     else
  1058                           
  1059                           
  1060                           ;lcd_dv.c: 18:         PORTDbits.RD0 = 1;
  1061  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1062  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1063  01C4  1408               	bsf	8,0	;volatile
  1064  01C5                     l15:
  1065                           
  1066                           ;lcd_dv.c: 20:     PORTDbits.RD2 = 1;
  1067  01C5  1508               	bsf	8,2	;volatile
  1068  01C6                     l1200:
  1069                           
  1070                           ;lcd_dv.c: 21:     LCD_WriteNibble (chr >> 4);
  1071  01C6  0875               	movf	LCD_Write@chr,w
  1072  01C7  00F6               	movwf	??_LCD_Write
  1073  01C8  3004               	movlw	4
  1074  01C9                     u745:
  1075  01C9  1003               	clrc
  1076  01CA  0CF6               	rrf	??_LCD_Write,f
  1077  01CB  3EFF               	addlw	-1
  1078  01CC  1D03               	skipz
  1079  01CD  29C9               	goto	u745
  1080  01CE  0876               	movf	??_LCD_Write,w
  1081  01CF  120A  118A  2233  120A  118A  	fcall	_LCD_WriteNibble
  1082  01D4                     l1202:
  1083                           
  1084                           ;lcd_dv.c: 22:     PORTDbits.RD2 = 0;
  1085  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1086  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1087  01D6  1108               	bcf	8,2	;volatile
  1088                           
  1089                           ;lcd_dv.c: 23:     TIMER0_Delay(10);
  1090  01D7  300A               	movlw	10
  1091  01D8  00F3               	movwf	TIMER0_Delay@ms
  1092  01D9  3000               	movlw	0
  1093  01DA  00F4               	movwf	TIMER0_Delay@ms+1
  1094  01DB  120A  118A  2284  120A  118A  	fcall	_TIMER0_Delay
  1095  01E0                     l1204:
  1096                           
  1097                           ;lcd_dv.c: 24:     PORTDbits.RD2 = 1;
  1098  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1099  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1100  01E2  1508               	bsf	8,2	;volatile
  1101                           
  1102                           ;lcd_dv.c: 25:     LCD_WriteNibble (chr & 0xFF);
  1103  01E3  0875               	movf	LCD_Write@chr,w
  1104  01E4  120A  118A  2233  120A  118A  	fcall	_LCD_WriteNibble
  1105  01E9                     l1206:
  1106                           
  1107                           ;lcd_dv.c: 26:     PORTDbits.RD2 = 0;
  1108  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1109  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1110  01EB  1108               	bcf	8,2	;volatile
  1111                           
  1112                           ;lcd_dv.c: 27:     TIMER0_Delay(10);
  1113  01EC  300A               	movlw	10
  1114  01ED  00F3               	movwf	TIMER0_Delay@ms
  1115  01EE  3000               	movlw	0
  1116  01EF  00F4               	movwf	TIMER0_Delay@ms+1
  1117  01F0  120A  118A  2284  120A  118A  	fcall	_TIMER0_Delay
  1118  01F5                     l16:
  1119  01F5  0008               	return
  1120  01F6                     __end_of_LCD_Write:
  1121                           
  1122                           	psect	text5
  1123  0284                     __ptext5:	
  1124 ;; *************** function _TIMER0_Delay *****************
  1125 ;; Defined at:
  1126 ;;		line 27 in file "timer_dv.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  ms              2    3[COMMON] int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         2       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         2       0       0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_LCD_Write
  1151 ;;		_LCD_Initialize
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156  0284                     _TIMER0_Delay:	
  1157                           ;psect for function _TIMER0_Delay
  1158                           
  1159  0284                     l1190:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _TIMER0_Delay: [wreg+status,2+status,0]
  1162                           
  1163                           
  1164                           ;timer_dv.c: 27: void TIMER0_Delay( int ms );timer_dv.c: 28: {;timer_dv.c: 29:     msCou
      +                          nts = 0;
  1165  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0286  01B7               	clrf	_msCounts	;volatile
  1168  0287  01B8               	clrf	_msCounts+1	;volatile
  1169  0288                     l1192:
  1170                           
  1171                           ;timer_dv.c: 30:     delayMS = ms;
  1172  0288  0874               	movf	TIMER0_Delay@ms+1,w
  1173  0289  00FA               	movwf	_delayMS+1	;volatile
  1174  028A  0873               	movf	TIMER0_Delay@ms,w
  1175  028B  00F9               	movwf	_delayMS	;volatile
  1176  028C                     l1194:	
  1177                           ;timer_dv.c: 31:     while(delayMS);
  1178                           
  1179  028C  0879               	movf	_delayMS,w	;volatile
  1180  028D  047A               	iorwf	_delayMS+1,w	;volatile
  1181  028E  1D03               	btfss	3,2
  1182  028F  2A91               	goto	u721
  1183  0290  2A92               	goto	u720
  1184  0291                     u721:
  1185  0291  2A8C               	goto	l1194
  1186  0292                     u720:
  1187  0292                     l93:
  1188  0292  0008               	return
  1189  0293                     __end_of_TIMER0_Delay:
  1190                           
  1191                           	psect	text6
  1192  0233                     __ptext6:	
  1193 ;; *************** function _LCD_WriteNibble *****************
  1194 ;; Defined at:
  1195 ;;		line 4 in file "lcd_dv.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  chr             1    wreg     unsigned char 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  chr             1    3[COMMON] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         1       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0
  1212 ;;      Totals:         1       0       0       0       0
  1213 ;;Total ram usage:        1 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_LCD_Write
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223  0233                     _LCD_WriteNibble:	
  1224                           ;psect for function _LCD_WriteNibble
  1225                           
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in _LCD_WriteNibble: [wreg]
  1229                           ;LCD_WriteNibble@chr stored from wreg
  1230  0233  00F3               	movwf	LCD_WriteNibble@chr
  1231  0234                     l1188:
  1232                           
  1233                           ;lcd_dv.c: 4: void LCD_WriteNibble(uint8_t chr);lcd_dv.c: 5: {;lcd_dv.c: 6:     PORTDbit
      +                          s.RD4 = chr & 0x01 ? 1:0;
  1234  0234  1873               	btfsc	LCD_WriteNibble@chr,0
  1235  0235  2A37               	goto	u641
  1236  0236  2A3B               	goto	u640
  1237  0237                     u641:
  1238  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0239  1608               	bsf	8,4	;volatile
  1241  023A  2A3E               	goto	u654
  1242  023B                     u640:
  1243  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1244  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1245  023D  1208               	bcf	8,4	;volatile
  1246  023E                     u654:
  1247                           
  1248                           ;lcd_dv.c: 7:     PORTDbits.RD5 = chr & 0x02 ? 1:0;
  1249  023E  18F3               	btfsc	LCD_WriteNibble@chr,1
  1250  023F  2A41               	goto	u661
  1251  0240  2A45               	goto	u660
  1252  0241                     u661:
  1253  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0243  1688               	bsf	8,5	;volatile
  1256  0244  2A48               	goto	u674
  1257  0245                     u660:
  1258  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0247  1288               	bcf	8,5	;volatile
  1261  0248                     u674:
  1262                           
  1263                           ;lcd_dv.c: 8:     PORTDbits.RD6 = chr & 0x04 ? 1:0;
  1264  0248  1973               	btfsc	LCD_WriteNibble@chr,2
  1265  0249  2A4B               	goto	u681
  1266  024A  2A4F               	goto	u680
  1267  024B                     u681:
  1268  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1269  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1270  024D  1708               	bsf	8,6	;volatile
  1271  024E  2A52               	goto	u694
  1272  024F                     u680:
  1273  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0251  1308               	bcf	8,6	;volatile
  1276  0252                     u694:
  1277                           
  1278                           ;lcd_dv.c: 9:     PORTDbits.RD7 = chr & 0x08 ? 1:0;
  1279  0252  19F3               	btfsc	LCD_WriteNibble@chr,3
  1280  0253  2A55               	goto	u701
  1281  0254  2A59               	goto	u700
  1282  0255                     u701:
  1283  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0257  1788               	bsf	8,7	;volatile
  1286  0258  2A5C               	goto	u714
  1287  0259                     u700:
  1288  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1289  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1290  025B  1388               	bcf	8,7	;volatile
  1291  025C                     u714:
  1292  025C                     l11:
  1293  025C  0008               	return
  1294  025D                     __end_of_LCD_WriteNibble:
  1295                           
  1296                           	psect	text7
  1297  025D                     __ptext7:	
  1298 ;; *************** function _I2C_WriteChar *****************
  1299 ;; Defined at:
  1300 ;;		line 84 in file "i2c_dv.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  saddr           2    4[COMMON] unsigned short 
  1303 ;;  data            1    6[COMMON] unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         3       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0
  1318 ;;      Totals:         3       0       0       0       0
  1319 ;;Total ram usage:        3 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 3
  1322 ;; This function calls:
  1323 ;;		_I2C_StartCond
  1324 ;;		_I2C_StopCond
  1325 ;;		_I2C_Write
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331  025D                     _I2C_WriteChar:	
  1332                           ;psect for function _I2C_WriteChar
  1333                           
  1334  025D                     l1130:	
  1335                           ;incstack = 0
  1336                           ; Regs used in _I2C_WriteChar: [wreg+status,2+status,0+pclath+cstack]
  1337                           
  1338                           
  1339                           ;i2c_dv.c: 84: void I2C_WriteChar(unsigned short saddr, unsigned char data);i2c_dv.c: 85
      +                          : {;i2c_dv.c: 86:        I2C_StartCond();
  1340  025D  120A  118A  22C3  120A  118A  	fcall	_I2C_StartCond
  1341                           
  1342                           ;i2c_dv.c: 87:        I2C_Write(saddr + 0);
  1343  0262  0874               	movf	I2C_WriteChar@saddr,w
  1344  0263  120A  118A  2274  120A  118A  	fcall	_I2C_Write
  1345                           
  1346                           ;i2c_dv.c: 88:        I2C_Write(data);
  1347  0268  0876               	movf	I2C_WriteChar@data,w
  1348  0269  120A  118A  2274  120A  118A  	fcall	_I2C_Write
  1349                           
  1350                           ;i2c_dv.c: 89:        I2C_StopCond();
  1351  026E  120A  118A  22BA  120A  118A  	fcall	_I2C_StopCond
  1352  0273                     l164:
  1353  0273  0008               	return
  1354  0274                     __end_of_I2C_WriteChar:
  1355                           
  1356                           	psect	text8
  1357  0274                     __ptext8:	
  1358 ;; *************** function _I2C_Write *****************
  1359 ;; Defined at:
  1360 ;;		line 44 in file "i2c_dv.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  dat             1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  dat             1    3[COMMON] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      unsigned char 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         1       0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 2
  1381 ;; This function calls:
  1382 ;;		_I2C_CheckFlag
  1383 ;; This function is called by:
  1384 ;;		_I2C_WriteChar
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388  0274                     _I2C_Write:	
  1389                           ;psect for function _I2C_Write
  1390                           
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1394                           ;I2C_Write@dat stored from wreg
  1395  0274  00F3               	movwf	I2C_Write@dat
  1396  0275                     l1014:
  1397                           
  1398                           ;i2c_dv.c: 44: unsigned char I2C_Write(unsigned char dat);i2c_dv.c: 45: {;i2c_dv.c: 46: 
      +                              I2C_CheckFlag();
  1399  0275  120A  118A  22A1  120A  118A  	fcall	_I2C_CheckFlag
  1400  027A                     l1016:
  1401                           
  1402                           ;i2c_dv.c: 47:     SSPBUF=dat;
  1403  027A  0873               	movf	I2C_Write@dat,w
  1404  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1405  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1406  027D  0093               	movwf	19	;volatile
  1407  027E                     l1018:
  1408                           
  1409                           ;i2c_dv.c: 48:  I2C_CheckFlag();
  1410  027E  120A  118A  22A1  120A  118A  	fcall	_I2C_CheckFlag
  1411  0283                     l1020:
  1412  0283                     l150:	
  1413                           ;i2c_dv.c: 50:  return ACKSTAT;;	Return value of _I2C_Write is never used
  1414                           
  1415  0283  0008               	return
  1416  0284                     __end_of_I2C_Write:
  1417                           
  1418                           	psect	text9
  1419  02BA                     __ptext9:	
  1420 ;; *************** function _I2C_StopCond *****************
  1421 ;; Defined at:
  1422 ;;		line 15 in file "i2c_dv.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; Hardware stack levels required when called: 2
  1443 ;; This function calls:
  1444 ;;		_I2C_CheckFlag
  1445 ;; This function is called by:
  1446 ;;		_I2C_WriteChar
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450  02BA                     _I2C_StopCond:	
  1451                           ;psect for function _I2C_StopCond
  1452                           
  1453  02BA                     l1010:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _I2C_StopCond: [wreg+status,2+status,0+pclath+cstack]
  1456                           
  1457                           
  1458                           ;i2c_dv.c: 17:     I2C_CheckFlag();
  1459  02BA  120A  118A  22A1  120A  118A  	fcall	_I2C_CheckFlag
  1460  02BF                     l1012:
  1461                           
  1462                           ;i2c_dv.c: 18:  PEN=1;
  1463  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1464  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1465  02C1  1511               	bsf	17,2	;volatile
  1466  02C2                     l138:
  1467  02C2  0008               	return
  1468  02C3                     __end_of_I2C_StopCond:
  1469                           
  1470                           	psect	text10
  1471  02C3                     __ptext10:	
  1472 ;; *************** function _I2C_StartCond *****************
  1473 ;; Defined at:
  1474 ;;		line 8 in file "i2c_dv.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 2
  1495 ;; This function calls:
  1496 ;;		_I2C_CheckFlag
  1497 ;; This function is called by:
  1498 ;;		_I2C_WriteChar
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502  02C3                     _I2C_StartCond:	
  1503                           ;psect for function _I2C_StartCond
  1504                           
  1505  02C3                     l1006:	
  1506                           ;incstack = 0
  1507                           ; Regs used in _I2C_StartCond: [wreg+status,2+status,0+pclath+cstack]
  1508                           
  1509                           
  1510                           ;i2c_dv.c: 10:     I2C_CheckFlag();
  1511  02C3  120A  118A  22A1  120A  118A  	fcall	_I2C_CheckFlag
  1512  02C8                     l1008:
  1513                           
  1514                           ;i2c_dv.c: 11:  SEN=1;
  1515  02C8  1683               	bsf	3,5	;RP0=1, select bank1
  1516  02C9  1303               	bcf	3,6	;RP1=0, select bank1
  1517  02CA  1411               	bsf	17,0	;volatile
  1518  02CB                     l135:
  1519  02CB  0008               	return
  1520  02CC                     __end_of_I2C_StartCond:
  1521                           
  1522                           	psect	text11
  1523  02A1                     __ptext11:	
  1524 ;; *************** function _I2C_CheckFlag *****************
  1525 ;; Defined at:
  1526 ;;		line 3 in file "i2c_dv.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_I2C_StartCond
  1551 ;;		_I2C_StopCond
  1552 ;;		_I2C_Write
  1553 ;;		_I2C_RestartCond
  1554 ;;		_I2C_Ack
  1555 ;;		_I2C_Nack
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559  02A1                     _I2C_CheckFlag:	
  1560                           ;psect for function _I2C_CheckFlag
  1561                           
  1562  02A1                     l998:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _I2C_CheckFlag: [wreg+status,2]
  1565                           
  1566  02A1                     l129:	
  1567                           ;i2c_dv.c: 5:  while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1568                           
  1569  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  1570  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  1571  02A3  1914               	btfsc	20,2	;volatile
  1572  02A4  2AA6               	goto	u441
  1573  02A5  2AA7               	goto	u440
  1574  02A6                     u441:
  1575  02A6  2AA1               	goto	l129
  1576  02A7                     u440:
  1577  02A7                     l1000:
  1578  02A7  0811               	movf	17,w	;volatile
  1579  02A8  391F               	andlw	31
  1580  02A9  1D03               	btfss	3,2
  1581  02AA  2AAC               	goto	u451
  1582  02AB  2AAD               	goto	u450
  1583  02AC                     u451:
  1584  02AC  2AA1               	goto	l129
  1585  02AD                     u450:
  1586  02AD                     l132:
  1587  02AD  0008               	return
  1588  02AE                     __end_of_I2C_CheckFlag:
  1589                           
  1590                           	psect	text12
  1591  016D                     __ptext12:	
  1592 ;; *************** function _I2C_Initialize *****************
  1593 ;; Defined at:
  1594 ;;		line 62 in file "i2c_dv.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  mode            1    wreg     enum E878
  1597 ;;  addr            1   14[BANK0 ] unsigned char 
  1598 ;;  b_rate          2   15[BANK0 ] unsigned int 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  mode            1    4[COMMON] enum E878
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, pclath, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         0       3       0       0       0
  1611 ;;      Locals:         1       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0
  1613 ;;      Totals:         1       3       0       0       0
  1614 ;;Total ram usage:        4 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 2
  1617 ;; This function calls:
  1618 ;;		___aldiv
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624  016D                     _I2C_Initialize:	
  1625                           ;psect for function _I2C_Initialize
  1626                           
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1630                           ;I2C_Initialize@mode stored from wreg
  1631  016D  00F4               	movwf	I2C_Initialize@mode
  1632  016E                     l1292:
  1633                           
  1634                           ;i2c_dv.c: 62: void I2C_Initialize(i2c_mode_t mode,uint8_t addr,uint16_t b_rate );i2c_dv
      +                          .c: 63: {;i2c_dv.c: 64:     TRISC3=TRISC4=1;
  1635  016E  1683               	bsf	3,5	;RP0=1, select bank1
  1636  016F  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0170  1607               	bsf	7,4	;volatile
  1638  0171  1A07               	btfsc	7,4	;volatile
  1639  0172  2974               	goto	u861
  1640  0173  2978               	goto	u860
  1641  0174                     u861:
  1642  0174  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0175  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0176  1587               	bsf	7,3	;volatile
  1645  0177  297B               	goto	u874
  1646  0178                     u860:
  1647  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1648  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1649  017A  1187               	bcf	7,3	;volatile
  1650  017B                     u874:
  1651  017B                     l1294:
  1652                           
  1653                           ;i2c_dv.c: 65:     if( mode == MASTER_MODE)
  1654  017B  0374               	decf	I2C_Initialize@mode,w
  1655  017C  1D03               	btfss	3,2
  1656  017D  297F               	goto	u881
  1657  017E  2980               	goto	u880
  1658  017F                     u881:
  1659  017F  29A5               	goto	l1304
  1660  0180                     u880:
  1661  0180                     l1296:
  1662                           
  1663                           ;i2c_dv.c: 66:     {;i2c_dv.c: 67:         SSPCON = 0x28;
  1664  0180  3028               	movlw	40
  1665  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0183  0094               	movwf	20	;volatile
  1668  0184                     l1298:
  1669                           
  1670                           ;i2c_dv.c: 68:         SSPCON2 = 0x00;
  1671  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1672  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1673  0186  0191               	clrf	17	;volatile
  1674  0187                     l1300:
  1675                           
  1676                           ;i2c_dv.c: 69:         SSPSTAT = 0x00;
  1677  0187  0194               	clrf	20	;volatile
  1678  0188                     l1302:
  1679                           
  1680                           ;i2c_dv.c: 70:         SSPADD = ((16000000/4)/b_rate) - 1;
  1681  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1683  018A  082F               	movf	I2C_Initialize@b_rate,w
  1684  018B  00A0               	movwf	___aldiv@divisor
  1685  018C  0830               	movf	I2C_Initialize@b_rate+1,w
  1686  018D  00A1               	movwf	___aldiv@divisor+1
  1687  018E  01A2               	clrf	___aldiv@divisor+2
  1688  018F  01A3               	clrf	___aldiv@divisor+3
  1689  0190  3000               	movlw	0
  1690  0191  00A7               	movwf	___aldiv@dividend+3
  1691  0192  303D               	movlw	61
  1692  0193  00A6               	movwf	___aldiv@dividend+2
  1693  0194  3009               	movlw	9
  1694  0195  00A5               	movwf	___aldiv@dividend+1
  1695  0196  3000               	movlw	0
  1696  0197  00A4               	movwf	___aldiv@dividend
  1697  0198  120A  118A  201B  120A  118A  	fcall	___aldiv
  1698  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1699  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1700  019F  0820               	movf	?___aldiv,w
  1701  01A0  3EFF               	addlw	255
  1702  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1703  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1704  01A3  0093               	movwf	19	;volatile
  1705                           
  1706                           ;i2c_dv.c: 71:     }else {
  1707  01A4  29B5               	goto	l1306
  1708  01A5                     l1304:
  1709                           
  1710                           ;i2c_dv.c: 72:         SSPADD = addr;
  1711  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1712  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1713  01A7  082E               	movf	I2C_Initialize@addr,w
  1714  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1715  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1716  01AA  0093               	movwf	19	;volatile
  1717                           
  1718                           ;i2c_dv.c: 73:         SSPSTAT = 0x80;
  1719  01AB  3080               	movlw	128
  1720  01AC  0094               	movwf	20	;volatile
  1721                           
  1722                           ;i2c_dv.c: 74:         SSPCON = 0x36;
  1723  01AD  3036               	movlw	54
  1724  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1725  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1726  01B0  0094               	movwf	20	;volatile
  1727                           
  1728                           ;i2c_dv.c: 75:         SSPCON2 = 0x01;
  1729  01B1  3001               	movlw	1
  1730  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1731  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1732  01B4  0091               	movwf	17	;volatile
  1733  01B5                     l1306:
  1734                           
  1735                           ;i2c_dv.c: 77:     TRISC3 = 1;
  1736  01B5  1587               	bsf	7,3	;volatile
  1737  01B6                     l1308:
  1738                           
  1739                           ;i2c_dv.c: 78:     TRISC4 = 1;
  1740  01B6  1607               	bsf	7,4	;volatile
  1741  01B7                     l161:
  1742  01B7  0008               	return
  1743  01B8                     __end_of_I2C_Initialize:
  1744                           
  1745                           	psect	text13
  1746  001B                     __ptext13:	
  1747 ;; *************** function ___aldiv *****************
  1748 ;; Defined at:
  1749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\aldiv.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  divisor         4    0[BANK0 ] long 
  1752 ;;  dividend        4    4[BANK0 ] long 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  quotient        4   10[BANK0 ] long 
  1755 ;;  sign            1    9[BANK0 ] unsigned char 
  1756 ;;  counter         1    8[BANK0 ] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  4    0[BANK0 ] long 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       8       0       0       0
  1767 ;;      Locals:         0       6       0       0       0
  1768 ;;      Temps:          1       0       0       0       0
  1769 ;;      Totals:         1      14       0       0       0
  1770 ;;Total ram usage:       15 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_I2C_Initialize
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780  001B                     ___aldiv:	
  1781                           ;psect for function ___aldiv
  1782                           
  1783  001B                     l1212:	
  1784                           ;incstack = 0
  1785                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1786                           
  1787  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1788  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1789  001D  01A9               	clrf	___aldiv@sign
  1790  001E                     l1214:
  1791  001E  1FA3               	btfss	___aldiv@divisor+3,7
  1792  001F  2821               	goto	u751
  1793  0020  2822               	goto	u750
  1794  0021                     u751:
  1795  0021  282F               	goto	l315
  1796  0022                     u750:
  1797  0022                     l1216:
  1798  0022  09A0               	comf	___aldiv@divisor,f
  1799  0023  09A1               	comf	___aldiv@divisor+1,f
  1800  0024  09A2               	comf	___aldiv@divisor+2,f
  1801  0025  09A3               	comf	___aldiv@divisor+3,f
  1802  0026  0AA0               	incf	___aldiv@divisor,f
  1803  0027  1903               	skipnz
  1804  0028  0AA1               	incf	___aldiv@divisor+1,f
  1805  0029  1903               	skipnz
  1806  002A  0AA2               	incf	___aldiv@divisor+2,f
  1807  002B  1903               	skipnz
  1808  002C  0AA3               	incf	___aldiv@divisor+3,f
  1809  002D  01A9               	clrf	___aldiv@sign
  1810  002E  0AA9               	incf	___aldiv@sign,f
  1811  002F                     l315:
  1812  002F  1FA7               	btfss	___aldiv@dividend+3,7
  1813  0030  2832               	goto	u761
  1814  0031  2833               	goto	u760
  1815  0032                     u761:
  1816  0032  2842               	goto	l1222
  1817  0033                     u760:
  1818  0033                     l1218:
  1819  0033  09A4               	comf	___aldiv@dividend,f
  1820  0034  09A5               	comf	___aldiv@dividend+1,f
  1821  0035  09A6               	comf	___aldiv@dividend+2,f
  1822  0036  09A7               	comf	___aldiv@dividend+3,f
  1823  0037  0AA4               	incf	___aldiv@dividend,f
  1824  0038  1903               	skipnz
  1825  0039  0AA5               	incf	___aldiv@dividend+1,f
  1826  003A  1903               	skipnz
  1827  003B  0AA6               	incf	___aldiv@dividend+2,f
  1828  003C  1903               	skipnz
  1829  003D  0AA7               	incf	___aldiv@dividend+3,f
  1830  003E                     l1220:
  1831  003E  3001               	movlw	1
  1832  003F  00F3               	movwf	??___aldiv
  1833  0040  0873               	movf	??___aldiv,w
  1834  0041  06A9               	xorwf	___aldiv@sign,f
  1835  0042                     l1222:
  1836  0042  3000               	movlw	0
  1837  0043  00AD               	movwf	___aldiv@quotient+3
  1838  0044  3000               	movlw	0
  1839  0045  00AC               	movwf	___aldiv@quotient+2
  1840  0046  3000               	movlw	0
  1841  0047  00AB               	movwf	___aldiv@quotient+1
  1842  0048  3000               	movlw	0
  1843  0049  00AA               	movwf	___aldiv@quotient
  1844  004A                     l1224:
  1845  004A  0823               	movf	___aldiv@divisor+3,w
  1846  004B  0422               	iorwf	___aldiv@divisor+2,w
  1847  004C  0421               	iorwf	___aldiv@divisor+1,w
  1848  004D  0420               	iorwf	___aldiv@divisor,w
  1849  004E  1903               	skipnz
  1850  004F  2851               	goto	u771
  1851  0050  2852               	goto	u770
  1852  0051                     u771:
  1853  0051  289F               	goto	l1244
  1854  0052                     u770:
  1855  0052                     l1226:
  1856  0052  01A8               	clrf	___aldiv@counter
  1857  0053  0AA8               	incf	___aldiv@counter,f
  1858  0054  2862               	goto	l1230
  1859  0055                     l1228:
  1860  0055  3001               	movlw	1
  1861  0056  00F3               	movwf	??___aldiv
  1862  0057                     u785:
  1863  0057  1003               	clrc
  1864  0058  0DA0               	rlf	___aldiv@divisor,f
  1865  0059  0DA1               	rlf	___aldiv@divisor+1,f
  1866  005A  0DA2               	rlf	___aldiv@divisor+2,f
  1867  005B  0DA3               	rlf	___aldiv@divisor+3,f
  1868  005C  0BF3               	decfsz	??___aldiv,f
  1869  005D  2857               	goto	u785
  1870  005E  3001               	movlw	1
  1871  005F  00F3               	movwf	??___aldiv
  1872  0060  0873               	movf	??___aldiv,w
  1873  0061  07A8               	addwf	___aldiv@counter,f
  1874  0062                     l1230:
  1875  0062  1FA3               	btfss	___aldiv@divisor+3,7
  1876  0063  2865               	goto	u791
  1877  0064  2866               	goto	u790
  1878  0065                     u791:
  1879  0065  2855               	goto	l1228
  1880  0066                     u790:
  1881  0066                     l1232:
  1882  0066  3001               	movlw	1
  1883  0067  00F3               	movwf	??___aldiv
  1884  0068                     u805:
  1885  0068  1003               	clrc
  1886  0069  0DAA               	rlf	___aldiv@quotient,f
  1887  006A  0DAB               	rlf	___aldiv@quotient+1,f
  1888  006B  0DAC               	rlf	___aldiv@quotient+2,f
  1889  006C  0DAD               	rlf	___aldiv@quotient+3,f
  1890  006D  0BF3               	decfsz	??___aldiv,f
  1891  006E  2868               	goto	u805
  1892  006F                     l1234:
  1893  006F  0823               	movf	___aldiv@divisor+3,w
  1894  0070  0227               	subwf	___aldiv@dividend+3,w
  1895  0071  1D03               	skipz
  1896  0072  287D               	goto	u815
  1897  0073  0822               	movf	___aldiv@divisor+2,w
  1898  0074  0226               	subwf	___aldiv@dividend+2,w
  1899  0075  1D03               	skipz
  1900  0076  287D               	goto	u815
  1901  0077  0821               	movf	___aldiv@divisor+1,w
  1902  0078  0225               	subwf	___aldiv@dividend+1,w
  1903  0079  1D03               	skipz
  1904  007A  287D               	goto	u815
  1905  007B  0820               	movf	___aldiv@divisor,w
  1906  007C  0224               	subwf	___aldiv@dividend,w
  1907  007D                     u815:
  1908  007D  1C03               	skipc
  1909  007E  2880               	goto	u811
  1910  007F  2881               	goto	u810
  1911  0080                     u811:
  1912  0080  2890               	goto	l1240
  1913  0081                     u810:
  1914  0081                     l1236:
  1915  0081  0820               	movf	___aldiv@divisor,w
  1916  0082  02A4               	subwf	___aldiv@dividend,f
  1917  0083  0821               	movf	___aldiv@divisor+1,w
  1918  0084  1C03               	skipc
  1919  0085  0F21               	incfsz	___aldiv@divisor+1,w
  1920  0086  02A5               	subwf	___aldiv@dividend+1,f
  1921  0087  0822               	movf	___aldiv@divisor+2,w
  1922  0088  1C03               	skipc
  1923  0089  0F22               	incfsz	___aldiv@divisor+2,w
  1924  008A  02A6               	subwf	___aldiv@dividend+2,f
  1925  008B  0823               	movf	___aldiv@divisor+3,w
  1926  008C  1C03               	skipc
  1927  008D  0F23               	incfsz	___aldiv@divisor+3,w
  1928  008E  02A7               	subwf	___aldiv@dividend+3,f
  1929  008F                     l1238:
  1930  008F  142A               	bsf	___aldiv@quotient,0
  1931  0090                     l1240:
  1932  0090  3001               	movlw	1
  1933  0091                     u825:
  1934  0091  1003               	clrc
  1935  0092  0CA3               	rrf	___aldiv@divisor+3,f
  1936  0093  0CA2               	rrf	___aldiv@divisor+2,f
  1937  0094  0CA1               	rrf	___aldiv@divisor+1,f
  1938  0095  0CA0               	rrf	___aldiv@divisor,f
  1939  0096  3EFF               	addlw	-1
  1940  0097  1D03               	skipz
  1941  0098  2891               	goto	u825
  1942  0099                     l1242:
  1943  0099  3001               	movlw	1
  1944  009A  02A8               	subwf	___aldiv@counter,f
  1945  009B  1D03               	btfss	3,2
  1946  009C  289E               	goto	u831
  1947  009D  289F               	goto	u830
  1948  009E                     u831:
  1949  009E  2866               	goto	l1232
  1950  009F                     u830:
  1951  009F                     l1244:
  1952  009F  0829               	movf	___aldiv@sign,w
  1953  00A0  1903               	btfsc	3,2
  1954  00A1  28A3               	goto	u841
  1955  00A2  28A4               	goto	u840
  1956  00A3                     u841:
  1957  00A3  28AF               	goto	l1248
  1958  00A4                     u840:
  1959  00A4                     l1246:
  1960  00A4  09AA               	comf	___aldiv@quotient,f
  1961  00A5  09AB               	comf	___aldiv@quotient+1,f
  1962  00A6  09AC               	comf	___aldiv@quotient+2,f
  1963  00A7  09AD               	comf	___aldiv@quotient+3,f
  1964  00A8  0AAA               	incf	___aldiv@quotient,f
  1965  00A9  1903               	skipnz
  1966  00AA  0AAB               	incf	___aldiv@quotient+1,f
  1967  00AB  1903               	skipnz
  1968  00AC  0AAC               	incf	___aldiv@quotient+2,f
  1969  00AD  1903               	skipnz
  1970  00AE  0AAD               	incf	___aldiv@quotient+3,f
  1971  00AF                     l1248:
  1972  00AF  082D               	movf	___aldiv@quotient+3,w
  1973  00B0  00A3               	movwf	?___aldiv+3
  1974  00B1  082C               	movf	___aldiv@quotient+2,w
  1975  00B2  00A2               	movwf	?___aldiv+2
  1976  00B3  082B               	movf	___aldiv@quotient+1,w
  1977  00B4  00A1               	movwf	?___aldiv+1
  1978  00B5  082A               	movf	___aldiv@quotient,w
  1979  00B6  00A0               	movwf	?___aldiv
  1980  00B7                     l325:
  1981  00B7  0008               	return
  1982  00B8                     __end_of___aldiv:
  1983                           
  1984                           	psect	text14
  1985  01F6                     __ptext14:	
  1986 ;; *************** function _timer0_isr *****************
  1987 ;; Defined at:
  1988 ;;		line 7 in file "timer_dv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0
  2004 ;;      Temps:          3       0       0       0       0
  2005 ;;      Totals:         3       0       0       0       0
  2006 ;;Total ram usage:        3 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		Interrupt level 1
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015  01F6                     _timer0_isr:	
  2016                           ;psect for function _timer0_isr
  2017                           
  2018  01F6                     i1l1154:
  2019                           
  2020                           ;timer_dv.c: 9:     if(TMR0IF == 1)
  2021  01F6  1D0B               	btfss	11,2	;volatile
  2022  01F7  29F9               	goto	u61_21
  2023  01F8  29FA               	goto	u61_20
  2024  01F9                     u61_21:
  2025  01F9  2A2C               	goto	i1l87
  2026  01FA                     u61_20:
  2027  01FA                     i1l1156:
  2028                           
  2029                           ;timer_dv.c: 10:     {;timer_dv.c: 11:         msCounts++;
  2030  01FA  3001               	movlw	1
  2031  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2032  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2033  01FD  07B7               	addwf	_msCounts,f	;volatile
  2034  01FE  1803               	skipnc
  2035  01FF  0AB8               	incf	_msCounts+1,f	;volatile
  2036  0200  3000               	movlw	0
  2037  0201  07B8               	addwf	_msCounts+1,f	;volatile
  2038                           
  2039                           ;timer_dv.c: 12:         if(msCounts > delayMS)
  2040  0202  0838               	movf	_msCounts+1,w	;volatile
  2041  0203  027A               	subwf	_delayMS+1,w	;volatile
  2042  0204  1D03               	skipz
  2043  0205  2A08               	goto	u62_25
  2044  0206  0837               	movf	_msCounts,w	;volatile
  2045  0207  0279               	subwf	_delayMS,w	;volatile
  2046  0208                     u62_25:
  2047  0208  1803               	skipnc
  2048  0209  2A0B               	goto	u62_21
  2049  020A  2A0C               	goto	u62_20
  2050  020B                     u62_21:
  2051  020B  2A0E               	goto	i1l1160
  2052  020C                     u62_20:
  2053  020C                     i1l1158:
  2054                           
  2055                           ;timer_dv.c: 13:         {;timer_dv.c: 14:             delayMS = 0;
  2056  020C  01F9               	clrf	_delayMS	;volatile
  2057  020D  01FA               	clrf	_delayMS+1	;volatile
  2058  020E                     i1l1160:
  2059                           
  2060                           ;timer_dv.c: 16:         ledBlinkTimeCounter++;
  2061  020E  3001               	movlw	1
  2062  020F  07B5               	addwf	_ledBlinkTimeCounter,f	;volatile
  2063  0210  1803               	skipnc
  2064  0211  0AB6               	incf	_ledBlinkTimeCounter+1,f	;volatile
  2065  0212  3000               	movlw	0
  2066  0213  07B6               	addwf	_ledBlinkTimeCounter+1,f	;volatile
  2067  0214                     i1l1162:
  2068                           
  2069                           ;timer_dv.c: 17:         if(ledBlinkTimeCounter > 1000)
  2070  0214  3003               	movlw	3
  2071  0215  0236               	subwf	_ledBlinkTimeCounter+1,w	;volatile
  2072  0216  30E9               	movlw	233
  2073  0217  1903               	skipnz
  2074  0218  0235               	subwf	_ledBlinkTimeCounter,w	;volatile
  2075  0219  1C03               	skipc
  2076  021A  2A1C               	goto	u63_21
  2077  021B  2A1D               	goto	u63_20
  2078  021C                     u63_21:
  2079  021C  2A29               	goto	i1l1168
  2080  021D                     u63_20:
  2081  021D                     i1l1164:
  2082                           
  2083                           ;timer_dv.c: 18:         {;timer_dv.c: 19:             ledBlinkTimeCounter = 0;
  2084  021D  01B5               	clrf	_ledBlinkTimeCounter	;volatile
  2085  021E  01B6               	clrf	_ledBlinkTimeCounter+1	;volatile
  2086  021F                     i1l1166:
  2087                           
  2088                           ;timer_dv.c: 20:             PORTBbits.RB0 ^=1;
  2089  021F  0806               	movf	6,w	;volatile
  2090  0220  3901               	andlw	1
  2091  0221  00F0               	movwf	??_timer0_isr
  2092  0222  3001               	movlw	1
  2093  0223  06F0               	xorwf	??_timer0_isr,f
  2094  0224  0806               	movf	6,w	;volatile
  2095  0225  0670               	xorwf	??_timer0_isr,w
  2096  0226  39FE               	andlw	-2
  2097  0227  0670               	xorwf	??_timer0_isr,w
  2098  0228  0086               	movwf	6	;volatile
  2099  0229                     i1l1168:
  2100                           
  2101                           ;timer_dv.c: 22:        TMR0 = (256 - (unsigned char)(((1 * 16000000)/1000)/((32*4)))) +
      +                           1;
  2102  0229  3084               	movlw	132
  2103  022A  0081               	movwf	1	;volatile
  2104  022B                     i1l1170:
  2105                           
  2106                           ;timer_dv.c: 23:        TMR0IF = 0;
  2107  022B  110B               	bcf	11,2	;volatile
  2108  022C                     i1l87:
  2109  022C  0872               	movf	??_timer0_isr+2,w
  2110  022D  008A               	movwf	10
  2111  022E  0E71               	swapf	??_timer0_isr+1,w
  2112  022F  0083               	movwf	3
  2113  0230  0EFE               	swapf	btemp,f
  2114  0231  0E7E               	swapf	btemp,w
  2115  0232  0009               	retfie
  2116  0233                     __end_of_timer0_isr:
  2117  007E                     btemp	set	126	;btemp
  2118  007E                     wtemp0	set	126
  2119                           
  2120                           	psect	intentry
  2121  0004                     __pintentry:	
  2122                           ;incstack = 0
  2123                           ; Regs used in _timer0_isr: [wreg+status,2+status,0]
  2124                           
  2125  0004                     interrupt_function:
  2126  007E                     saved_w	set	btemp
  2127  0004  00FE               	movwf	btemp
  2128  0005  0E03               	swapf	3,w
  2129  0006  00F1               	movwf	??_timer0_isr+1
  2130  0007  080A               	movf	10,w
  2131  0008  00F2               	movwf	??_timer0_isr+2
  2132  0009  120A  118A  29F6   	ljmp	_timer0_isr
  2133                           
  2134                           	psect	idloc
  2135                           
  2136                           ;Config register IDLOC0 @ 0x2000
  2137                           ;	unspecified, using default values
  2138  2000                     	org	8192
  2139  2000  3FFF               	dw	16383
  2140                           
  2141                           ;Config register IDLOC1 @ 0x2001
  2142                           ;	unspecified, using default values
  2143  2001                     	org	8193
  2144  2001  3FFF               	dw	16383
  2145                           
  2146                           ;Config register IDLOC2 @ 0x2002
  2147                           ;	unspecified, using default values
  2148  2002                     	org	8194
  2149  2002  3FFF               	dw	16383
  2150                           
  2151                           ;Config register IDLOC3 @ 0x2003
  2152                           ;	unspecified, using default values
  2153  2003                     	org	8195
  2154  2003  3FFF               	dw	16383
  2155                           
  2156                           	psect	config
  2157                           
  2158                           ;Config register CONFIG @ 0x2007
  2159                           ;	Oscillator Selection bits
  2160                           ;	FOSC = HS, HS oscillator
  2161                           ;	Watchdog Timer Enable bit
  2162                           ;	WDTE = OFF, WDT disabled
  2163                           ;	Power-up Timer Enable bit
  2164                           ;	PWRTE = OFF, PWRT disabled
  2165                           ;	Brown-out Reset Enable bit
  2166                           ;	BOREN = OFF, BOR disabled
  2167                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2168                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2169                           ;	Data EEPROM Memory Code Protection bit
  2170                           ;	CPD = OFF, Data EEPROM code protection off
  2171                           ;	Flash Program Memory Write Enable bits
  2172                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2173                           ;	In-Circuit Debugger Mode bit
  2174                           ;	DEBUG = 0x1, unprogrammed default
  2175                           ;	Flash Program Memory Code Protection bit
  2176                           ;	CP = OFF, Code protection off
  2177  2007                     	org	8199
  2178  2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     21      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_Initialize->_LCD_WriteCmd
    _LCD_WriteCmd->_LCD_Write
    _LCD_Write->_TIMER0_Delay
    _I2C_WriteChar->_I2C_Write
    _I2C_Initialize->___aldiv

Critical Paths under _timer0_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Initialize
    _LCD_Initialize->_LCD_WriteCmd
    _I2C_Initialize->___aldiv

Critical Paths under _timer0_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3325
                                             17 BANK0      4     4      0
                     _I2C_Initialize
                      _I2C_WriteChar
                     _LCD_Initialize
                       _TIMER0_Delay
                  _TIMER0_Initialize
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       0     0      0    1570
                       _LCD_WriteCmd
                       _TIMER0_Delay
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0     999
                                              8 COMMON     1     1      0
                                              0 BANK0      1     1      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_Write                                            3     2      1     968
                                              5 COMMON     3     2      1
                    _LCD_WriteNibble
                       _TIMER0_Delay
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Delay                                         2     0      2     571
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteNibble                                      1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_WriteChar                                        3     0      3     218
                                              4 COMMON     3     0      3
                      _I2C_StartCond
                       _I2C_StopCond
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              3 COMMON     1     1      0
                      _I2C_CheckFlag
 ---------------------------------------------------------------------------------
 (2) _I2C_StopCond                                         0     0      0       0
                      _I2C_CheckFlag
 ---------------------------------------------------------------------------------
 (2) _I2C_StartCond                                        0     0      0       0
                      _I2C_CheckFlag
 ---------------------------------------------------------------------------------
 (3) _I2C_CheckFlag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       4     1      3     898
                                              4 COMMON     1     1      0
                                             14 BANK0      3     0      3
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer0_isr                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___aldiv
   _I2C_WriteChar
     _I2C_StartCond
       _I2C_CheckFlag
     _I2C_StopCond
       _I2C_CheckFlag
     _I2C_Write
       _I2C_CheckFlag
   _LCD_Initialize
     _LCD_WriteCmd
       _LCD_Write
         _LCD_WriteNibble
         _TIMER0_Delay
     _TIMER0_Delay
   _TIMER0_Delay
   _TIMER0_Initialize

 _timer0_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Jun 07 16:42:27 2022

           _LCD_Initialize 0113                         l11 025C                         l14 01C2  
                       l15 01C5                         l16 01F5                         l34 016C  
                       l19 02A0                         l55 00DC                main@Counter 0033  
                       l93 0292                         l96 02B9        _ledBlinkTimeCounter 0035  
                      l132 02AD                        l150 0283                        l135 02CB  
                      l161 01B7                        l129 02A1                        l138 02C2  
                      l315 002F                        l164 0273                        l325 00B7  
                      _GIE 005F                        l998 02A1                        u440 02A7  
        ??_LCD_WriteNibble 0073                        _PEN 048A                        u441 02A6  
                      u450 02AD                        u451 02AC                        u700 0259  
                      u701 0255                        u640 023B                        u720 0292  
                      u641 0237                        u721 0291                        u810 0081  
                      u714 025C                        u730 01BE                        u811 0080  
                      u731 01BD                        u660 0245                        _SEN 0488  
                      u805 0068                        u661 0241                        u830 009F  
                      u750 0022                        u654 023E                        u831 009E  
                      u815 007D                        u751 0021                        u840 00A4  
                      u760 0033                        u680 024F                        u841 00A3  
                      u825 0091                        u761 0032                        u681 024B  
                      u745 01C9                        u770 0052                        u674 0248  
                      u771 0051                        u860 0178                        u861 0174  
                      u790 0066                        u694 0252                        u791 0065  
                      u880 0180                        u785 0057                        u881 017F  
                      u874 017B                        u890 0102                        u891 0101  
                      u895 00FE                       l1000 02A7                       l1010 02BA  
                     l1012 02BF                       l1020 0283                       l1006 02C3  
                     l1014 0275                       l1110 02B8                       l1008 02C8  
                     l1016 027A                       l1200 01C6                       l1104 02AE  
                     l1018 027E                       l1130 025D                       l1202 01D4  
                     l1106 02B6                       l1220 003E                       l1212 001B  
                     l1300 0187                       l1204 01E0                       l1108 02B7  
                     l1230 0062                       l1222 0042                       l1214 001E  
                     l1302 0188                       l1206 01E9                       l1240 0090  
                     l1232 0066                       l1224 004A                       l1216 0022  
                     l1304 01A5                       l1208 0296                       l1320 00C6  
                     l1242 0099                       l1234 006F                       l1226 0052  
                     l1218 0033                       l1306 01B5                       l1330 0106  
                     l1322 00CB                       l1314 00B8                       l1236 0081  
                     l1228 0055                       l1244 009F                       l1308 01B6  
                     l1260 0113                       l1324 00D8                       l1316 00BB  
                     l1246 00A4                       l1238 008F                       l1190 0284  
                     l1270 0121                       l1262 0116                       l1326 00EC  
                     l1318 00C1                       l1248 00AF                       l1192 0288  
                     l1280 0148                       l1272 012A                       l1264 0119  
                     l1328 0102                       l1194 028C                       l1290 0166  
                     l1282 014E                       l1274 0130                       l1266 011A  
                     l1292 016E                       l1188 0234                       l1196 01B9  
                     l1284 0154                       l1276 0139                       l1268 011B  
                     l1294 017B                       l1198 01BE                       l1286 015A  
                     l1278 013F                       l1296 0180                       l1288 0160  
                     l1298 0184                       _PEIE 005E                       _RCEN 048B  
                     i1l87 022C                       _TMR0 0001                       _RSEN 0489  
                     _main 00B8                       btemp 007E                       start 000C  
            ?_LCD_WriteCmd 0070     __end_of_LCD_Initialize 016D            __end_of___aldiv 00B8  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
                    _PORTD 0008                      u61_20 01FA                      u61_21 01F9  
                    u62_20 020C                      u62_21 020B                      u62_25 0208  
                    u63_20 021D                      u63_21 021C                      _TRISD 0088  
                    _SSPIF 0063          __end_of_I2C_Write 0284                      pclath 000A  
                    status 0003                      wtemp0 007E             ??_LCD_WriteCmd 0078  
             _I2C_StopCond 02BA            ?_LCD_Initialize 0070            __initialization 000F  
             __end_of_main 0113              _I2C_CheckFlag 02A1                     ??_main 0031  
        __end_of_LCD_Write 01F6                     i1l1160 020E                     i1l1170 022B  
                   i1l1162 0214                     i1l1154 01F6                     i1l1164 021D  
                   i1l1156 01FA                     i1l1166 021F                     i1l1158 020C  
                   i1l1168 0229                     _TMR0IE 005D                     _TMR0IF 005A  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPBUF 0013                     _SSPCON 0014               LCD_Write@chr 0075  
                ??___aldiv 0073             ?_I2C_CheckFlag 0070                     saved_w 007E  
  __end_of__initialization 0017              _I2C_StartCond 02C3            _LCD_WriteNibble 0233  
           __pcstackCOMMON 0070              _I2C_WriteChar 025D       __end_of_LCD_WriteCmd 02A1  
            ?_TIMER0_Delay 0073                 __pbssBANK0 0035             ?_I2C_StartCond 0070  
           ?_I2C_WriteChar 0074                 __pmaintext 00B8            ??_I2C_CheckFlag 0073  
               __pintentry 0004                    _ACKSTAT 048E             ??_TIMER0_Delay 0075  
                  _SSPCON2 0091                    _SSPSTAT 0094    __end_of_LCD_WriteNibble 025D  
         ??_LCD_Initialize 0079                  _I2C_Write 0274              LCD_Write@type 0077  
             I2C_Write@dat 0073                    ___aldiv 001B                    _delayMS 0079  
           _I2C_Initialize 016D                    __ptext1 02AE                    __ptext2 0113  
                  __ptext3 0293                    __ptext4 01B8                    __ptext5 0284  
                  __ptext6 0233                    __ptext7 025D                    __ptext8 0274  
                  __ptext9 02BA           ___aldiv@dividend 0024            ??_I2C_StartCond 0073  
                _LCD_Write 01B8       end_of_initialization 0017                 ?_I2C_Write 0070  
          ??_I2C_WriteChar 0077           ___aldiv@quotient 002A                 _timer0_isr 01F6  
   __end_of_I2C_Initialize 01B8                  _PORTBbits 0006                  _PORTDbits 0008  
                _TRISBbits 0086                 ?_LCD_Write 0075           ?_LCD_WriteNibble 0070  
             _LCD_WriteCmd 0293       __end_of_TIMER0_Delay 0293            ?_I2C_Initialize 002E  
      start_initialization 000F                ??_I2C_Write 0073            LCD_WriteCmd@chr 0020  
              ?_timer0_isr 0070                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                ??_LCD_Write 0076              ?_I2C_StopCond 0070  
                 ?___aldiv 0020      __end_of_I2C_CheckFlag 02AE            ___aldiv@divisor 0020  
        interrupt_function 0004            ___aldiv@counter 0028             ??_I2C_StopCond 0073  
     I2C_Initialize@b_rate 002F             TIMER0_Delay@ms 0073               _TIMER0_Delay 0284  
    __end_of_I2C_StartCond 02CC           ??_I2C_Initialize 0074      __end_of_I2C_WriteChar 0274  
                 __ptext10 02C3                   __ptext11 02A1                   __ptext12 016D  
                 __ptext13 001B                   __ptext14 01F6                   _msCounts 0037  
             ??_timer0_isr 0070       __end_of_I2C_StopCond 02C3         I2C_WriteChar@saddr 0074  
        _TIMER0_Initialize 02AE         LCD_WriteNibble@chr 0073                   intlevel1 0000  
       __end_of_timer0_isr 0233         ?_TIMER0_Initialize 0070        ??_TIMER0_Initialize 0073  
       I2C_Initialize@addr 002E         I2C_Initialize@mode 0074          I2C_WriteChar@data 0076  
               _OPTION_REG 0081  __end_of_TIMER0_Initialize 02BA               ___aldiv@sign 0029  
