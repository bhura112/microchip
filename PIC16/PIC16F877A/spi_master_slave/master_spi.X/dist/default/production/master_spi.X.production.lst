

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue May 31 14:40:59 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0013                     _SSPBUF	set	19
   297  0014                     _SSPCONbits	set	20
   298  0001                     _TMR0	set	1
   299  0006                     _PORTBbits	set	6
   300  005E                     _PEIE	set	94
   301  005F                     _GIE	set	95
   302  005D                     _TMR0IE	set	93
   303  005A                     _TMR0IF	set	90
   304  0094                     _SSPSTATbits	set	148
   305  0094                     _SSPSTAT	set	148
   306  0081                     _OPTION_REG	set	129
   307  0088                     _TRISD	set	136
   308  0086                     _TRISB	set	134
   309  043B                     _TRISC3	set	1083
   310  043D                     _TRISC5	set	1085
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   322  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   323  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   324                           
   325                           ; Clear objects allocated to BANK0
   326  0014  1283               	bcf	3,5	;RP0=0, select bank0
   327  0015  1303               	bcf	3,6	;RP1=0, select bank0
   328  0016  01A3               	clrf	__pbssBANK0& (0+127)
   329  0017  01A4               	clrf	(__pbssBANK0+1)& (0+127)
   330  0018                     end_of_initialization:	
   331                           ;End of C runtime variable initialization code
   332                           
   333  0018                     __end_of__initialization:
   334  0018  0183               	clrf	3
   335  0019  120A  118A  2859   	ljmp	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMMON
   338  0076                     __pbssCOMMON:
   339  0076                     _delayMS:
   340  0076                     	ds	2
   341  0078                     _msCounts:
   342  0078                     	ds	2
   343  007A                     _counts:
   344  007A                     	ds	1
   345                           
   346                           	psect	bssBANK0
   347  0023                     __pbssBANK0:
   348  0023                     _ledBlinkTimeCounter:
   349  0023                     	ds	2
   350                           
   351                           	psect	cstackCOMMON
   352  0070                     __pcstackCOMMON:
   353  0070                     ?_TIMER0_Initialize:
   354  0070                     ?_SPI0_Initialize:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_timer0_isr:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ??_timer0_isr:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_SPI0_SlaveSelect:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369                           
   370                           ; 2 bytes @ 0x0
   371  0070                     	ds	3
   372  0073                     ??_TIMER0_Initialize:
   373  0073                     ??_SPI0_Initialize:	
   374                           ; 1 bytes @ 0x3
   375                           
   376  0073                     ?_TIMER0_Delay:	
   377                           ; 1 bytes @ 0x3
   378                           
   379  0073                     ??_SPI0_SlaveSelect:	
   380                           ; 1 bytes @ 0x3
   381                           
   382  0073                     SPI0_Initialize@mode:	
   383                           ; 1 bytes @ 0x3
   384                           
   385  0073                     TIMER0_Delay@ms:	
   386                           ; 1 bytes @ 0x3
   387                           
   388                           
   389                           ; 2 bytes @ 0x3
   390  0073                     	ds	2
   391  0075                     ??_TIMER0_Delay:
   392  0075                     SPI0_SlaveSelect@slave:	
   393                           ; 1 bytes @ 0x5
   394                           
   395                           
   396                           ; 1 bytes @ 0x5
   397  0075                     	ds	1
   398  0076                     ??_SPI0_Write:
   399                           
   400                           	psect	cstackBANK0
   401  0020                     __pcstackBANK0:	
   402                           ; 1 bytes @ 0x6
   403                           
   404  0020                     ?_SPI0_Write:
   405  0020                     SPI0_Write@chr:	
   406                           ; 1 bytes @ 0x0
   407                           
   408                           
   409                           ; 1 bytes @ 0x0
   410  0020                     	ds	1
   411  0021                     SPI0_Write@slave:
   412                           
   413                           ; 1 bytes @ 0x1
   414  0021                     	ds	1
   415  0022                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x2
   418  0022                     	ds	1
   419                           
   420                           	psect	maintext
   421  0059                     __pmaintext:	
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 22 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  2   18[None  ] int 
   434 ;; Registers used:
   435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : B00/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          0       1       0       0       0
   444 ;;      Totals:         0       1       0       0       0
   445 ;;Total ram usage:        1 bytes
   446 ;; Hardware stack levels required when called: 3
   447 ;; This function calls:
   448 ;;		_SPI0_Initialize
   449 ;;		_SPI0_Write
   450 ;;		_TIMER0_Delay
   451 ;;		_TIMER0_Initialize
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457  0059                     _main:	
   458                           ;psect for function _main
   459                           
   460  0059                     l886:	
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   463                           
   464                           
   465                           ;main.c: 24:     TRISB = 0;
   466  0059  1683               	bsf	3,5	;RP0=1, select bank1
   467  005A  1303               	bcf	3,6	;RP1=0, select bank1
   468  005B  0186               	clrf	6	;volatile
   469                           
   470                           ;main.c: 25:     TRISD = 0;
   471  005C  0188               	clrf	8	;volatile
   472  005D                     l888:
   473                           
   474                           ;main.c: 27:     TIMER0_Initialize();
   475  005D  120A  118A  20E1  120A  118A  	fcall	_TIMER0_Initialize
   476  0062                     l890:
   477                           
   478                           ;main.c: 29:     SPI0_Initialize(MASTER_MODE);
   479  0062  3001               	movlw	1
   480  0063  120A  118A  20B1  120A  118A  	fcall	_SPI0_Initialize
   481  0068                     l892:
   482                           
   483                           ;main.c: 32:     {;main.c: 33:         SPI0_Write(SLAVE_1,counts + 48);
   484  0068  087A               	movf	_counts,w
   485  0069  3E30               	addlw	48
   486  006A  1283               	bcf	3,5	;RP0=0, select bank0
   487  006B  1303               	bcf	3,6	;RP1=0, select bank0
   488  006C  00A2               	movwf	??_main
   489  006D  0822               	movf	??_main,w
   490  006E  00A0               	movwf	SPI0_Write@chr
   491  006F  3000               	movlw	0
   492  0070  120A  118A  20C6  120A  118A  	fcall	_SPI0_Write
   493  0075                     l894:
   494                           
   495                           ;main.c: 34:         TIMER0_Delay(500);
   496  0075  30F4               	movlw	244
   497  0076  00F3               	movwf	TIMER0_Delay@ms
   498  0077  3001               	movlw	1
   499  0078  00F4               	movwf	TIMER0_Delay@ms+1
   500  0079  120A  118A  20D4  120A  118A  	fcall	_TIMER0_Delay
   501  007E                     l896:
   502                           
   503                           ;main.c: 36:         if(counts++ > 9)
   504  007E  3001               	movlw	1
   505  007F  07FA               	addwf	_counts,f
   506  0080  30FF               	movlw	-1
   507  0081  077A               	addwf	_counts,w
   508  0082  1283               	bcf	3,5	;RP0=0, select bank0
   509  0083  1303               	bcf	3,6	;RP1=0, select bank0
   510  0084  00A2               	movwf	??_main
   511  0085  300A               	movlw	10
   512  0086  0222               	subwf	??_main,w
   513  0087  1C03               	skipc
   514  0088  288A               	goto	u141
   515  0089  288B               	goto	u140
   516  008A                     u141:
   517  008A  2868               	goto	l892
   518  008B                     u140:
   519  008B                     l898:
   520                           
   521                           ;main.c: 37:             counts = 0;
   522  008B  01FA               	clrf	_counts
   523  008C  2868               	goto	l892
   524  008D  120A  118A  280C   	ljmp	start
   525  0090                     __end_of_main:
   526                           
   527                           	psect	text1
   528  00E1                     __ptext1:	
   529 ;; *************** function _TIMER0_Initialize *****************
   530 ;; Defined at:
   531 ;;		line 33 in file "timer_dv.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559  00E1                     _TIMER0_Initialize:	
   560                           ;psect for function _TIMER0_Initialize
   561                           
   562  00E1                     l706:	
   563                           ;incstack = 0
   564                           ; Regs used in _TIMER0_Initialize: [wreg]
   565                           
   566                           
   567                           ;timer_dv.c: 35:     OPTION_REG = (1 << 2);
   568  00E1  3004               	movlw	4
   569  00E2  1683               	bsf	3,5	;RP0=1, select bank1
   570  00E3  1303               	bcf	3,6	;RP1=0, select bank1
   571  00E4  0081               	movwf	1	;volatile
   572                           
   573                           ;timer_dv.c: 37:     TMR0 = (256 - (unsigned char)(((1 * 16000000)/1000)/((32*4))));
   574  00E5  3083               	movlw	131
   575  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   576  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   577  00E8  0081               	movwf	1	;volatile
   578  00E9                     l708:
   579                           
   580                           ;timer_dv.c: 39:     TMR0IE = 1;
   581  00E9  168B               	bsf	11,5	;volatile
   582  00EA                     l710:
   583                           
   584                           ;timer_dv.c: 40:     GIE = 1;
   585  00EA  178B               	bsf	11,7	;volatile
   586  00EB                     l712:
   587                           
   588                           ;timer_dv.c: 41:     PEIE = 1;
   589  00EB  170B               	bsf	11,6	;volatile
   590  00EC                     l60:
   591  00EC  0008               	return
   592  00ED                     __end_of_TIMER0_Initialize:
   593                           
   594                           	psect	text2
   595  00D4                     __ptext2:	
   596 ;; *************** function _TIMER0_Delay *****************
   597 ;; Defined at:
   598 ;;		line 27 in file "timer_dv.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  ms              2    3[COMMON] int 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         2       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         2       0       0       0       0
   616 ;;Total ram usage:        2 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626  00D4                     _TIMER0_Delay:	
   627                           ;psect for function _TIMER0_Delay
   628                           
   629  00D4                     l814:	
   630                           ;incstack = 0
   631                           ; Regs used in _TIMER0_Delay: [wreg+status,2+status,0]
   632                           
   633                           
   634                           ;timer_dv.c: 27: void TIMER0_Delay( int ms );timer_dv.c: 28: {;timer_dv.c: 29:     msCou
      +                          nts = 0;
   635  00D4  01F8               	clrf	_msCounts	;volatile
   636  00D5  01F9               	clrf	_msCounts+1	;volatile
   637  00D6                     l816:
   638                           
   639                           ;timer_dv.c: 30:     delayMS = ms;
   640  00D6  0874               	movf	TIMER0_Delay@ms+1,w
   641  00D7  00F7               	movwf	_delayMS+1	;volatile
   642  00D8  0873               	movf	TIMER0_Delay@ms,w
   643  00D9  00F6               	movwf	_delayMS	;volatile
   644  00DA                     l818:	
   645                           ;timer_dv.c: 31:     while(delayMS);
   646                           
   647  00DA  0876               	movf	_delayMS,w	;volatile
   648  00DB  0477               	iorwf	_delayMS+1,w	;volatile
   649  00DC  1D03               	btfss	3,2
   650  00DD  28DF               	goto	u91
   651  00DE  28E0               	goto	u90
   652  00DF                     u91:
   653  00DF  28DA               	goto	l818
   654  00E0                     u90:
   655  00E0                     l57:
   656  00E0  0008               	return
   657  00E1                     __end_of_TIMER0_Delay:
   658                           
   659                           	psect	text3
   660  00C6                     __ptext3:	
   661 ;; *************** function _SPI0_Write *****************
   662 ;; Defined at:
   663 ;;		line 40 in file "spi_dv.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;  slave           1    wreg     unsigned char 
   666 ;;  chr             1    0[BANK0 ] unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  slave           1    1[BANK0 ] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       1       0       0       0
   679 ;;      Locals:         0       1       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       2       0       0       0
   682 ;;Total ram usage:        2 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 2
   685 ;; This function calls:
   686 ;;		_SPI0_SlaveSelect
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692  00C6                     _SPI0_Write:	
   693                           ;psect for function _SPI0_Write
   694                           
   695                           
   696                           ;incstack = 0
   697                           ; Regs used in _SPI0_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   698                           ;SPI0_Write@slave stored from wreg
   699  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   700  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   701  00C8  00A1               	movwf	SPI0_Write@slave
   702  00C9                     l882:
   703                           
   704                           ;spi_dv.c: 40: void SPI0_Write(uint8_t slave,uint8_t chr);spi_dv.c: 41: {;spi_dv.c: 43: 
      +                              SPI0_SlaveSelect(slave);
   705  00C9  0821               	movf	SPI0_Write@slave,w
   706  00CA  120A  118A  2090  120A  118A  	fcall	_SPI0_SlaveSelect
   707  00CF                     l884:
   708                           
   709                           ;spi_dv.c: 44:     SSPBUF = chr;
   710  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   711  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   712  00D1  0820               	movf	SPI0_Write@chr,w
   713  00D2  0093               	movwf	19	;volatile
   714  00D3                     l95:
   715  00D3  0008               	return
   716  00D4                     __end_of_SPI0_Write:
   717                           
   718                           	psect	text4
   719  0090                     __ptext4:	
   720 ;; *************** function _SPI0_SlaveSelect *****************
   721 ;; Defined at:
   722 ;;		line 21 in file "spi_dv.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  slave           1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  slave           1    5[COMMON] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          2       0       0       0       0
   739 ;;      Totals:         3       0       0       0       0
   740 ;;Total ram usage:        3 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_SPI0_Write
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750  0090                     _SPI0_SlaveSelect:	
   751                           ;psect for function _SPI0_SlaveSelect
   752                           
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _SPI0_SlaveSelect: [wreg-fsr0h+status,2+status,0]
   756                           ;SPI0_SlaveSelect@slave stored from wreg
   757  0090  00F5               	movwf	SPI0_SlaveSelect@slave
   758  0091                     l872:
   759                           
   760                           ;spi_dv.c: 21: void SPI0_SlaveSelect(uint8_t slave);spi_dv.c: 22: {;spi_dv.c: 23:     PO
      +                          RTBbits.RB1 = 1;
   761  0091  1283               	bcf	3,5	;RP0=0, select bank0
   762  0092  1303               	bcf	3,6	;RP1=0, select bank0
   763  0093  1486               	bsf	6,1	;volatile
   764                           
   765                           ;spi_dv.c: 24:     PORTBbits.RB2 = 1;
   766  0094  1506               	bsf	6,2	;volatile
   767                           
   768                           ;spi_dv.c: 25:     PORTBbits.RB3 = 1;
   769  0095  1586               	bsf	6,3	;volatile
   770                           
   771                           ;spi_dv.c: 27:     switch(slave)
   772  0096  289D               	goto	l876
   773  0097                     l88:	
   774                           ;spi_dv.c: 28:     {;spi_dv.c: 29:         case SLAVE_1:
   775                           
   776                           
   777                           ;spi_dv.c: 30:             PORTBbits.RB1 = 0;
   778  0097  1086               	bcf	6,1	;volatile
   779                           
   780                           ;spi_dv.c: 31:             break;
   781  0098  28B0               	goto	l92
   782  0099                     l90:	
   783                           ;spi_dv.c: 32:         case SLAVE_2:
   784                           
   785                           
   786                           ;spi_dv.c: 33:             PORTBbits.RB2 = 0;
   787  0099  1106               	bcf	6,2	;volatile
   788                           
   789                           ;spi_dv.c: 34:             break;
   790  009A  28B0               	goto	l92
   791  009B                     l91:	
   792                           ;spi_dv.c: 35:         case SLAVE_3:
   793                           
   794                           
   795                           ;spi_dv.c: 36:             PORTBbits.RB3 = 0;
   796  009B  1186               	bcf	6,3	;volatile
   797                           
   798                           ;spi_dv.c: 37:             break;
   799  009C  28B0               	goto	l92
   800  009D                     l876:
   801  009D  0875               	movf	SPI0_SlaveSelect@slave,w
   802  009E  00F3               	movwf	??_SPI0_SlaveSelect
   803  009F  01F4               	clrf	??_SPI0_SlaveSelect+1
   804                           
   805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   806                           ; Switch size 1, requested type "simple"
   807                           ; Number of cases is 1, Range of values is 0 to 0
   808                           ; switch strategies available:
   809                           ; Name         Instructions Cycles
   810                           ; simple_byte            4     3 (average)
   811                           ; direct_byte           11     8 (fixed)
   812                           ; jumptable            260     6 (fixed)
   813                           ;	Chosen strategy is simple_byte
   814  00A0  0874               	movf	??_SPI0_SlaveSelect+1,w
   815  00A1  3A00               	xorlw	0	; case 0
   816  00A2  1903               	skipnz
   817  00A3  28A5               	goto	l920
   818  00A4  28B0               	goto	l92
   819  00A5                     l920:
   820                           
   821                           ; Switch size 1, requested type "simple"
   822                           ; Number of cases is 3, Range of values is 0 to 2
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte           10     6 (average)
   826                           ; direct_byte           17     8 (fixed)
   827                           ; jumptable            260     6 (fixed)
   828                           ;	Chosen strategy is simple_byte
   829  00A5  0873               	movf	??_SPI0_SlaveSelect,w
   830  00A6  3A00               	xorlw	0	; case 0
   831  00A7  1903               	skipnz
   832  00A8  2897               	goto	l88
   833  00A9  3A01               	xorlw	1	; case 1
   834  00AA  1903               	skipnz
   835  00AB  2899               	goto	l90
   836  00AC  3A03               	xorlw	3	; case 2
   837  00AD  1903               	skipnz
   838  00AE  289B               	goto	l91
   839  00AF  28B0               	goto	l92
   840  00B0                     l92:
   841  00B0  0008               	return
   842  00B1                     __end_of_SPI0_SlaveSelect:
   843                           
   844                           	psect	text5
   845  00B1                     __ptext5:	
   846 ;; *************** function _SPI0_Initialize *****************
   847 ;; Defined at:
   848 ;;		line 3 in file "spi_dv.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  mode            1    wreg     unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  mode            1    3[COMMON] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         1       0       0       0       0
   866 ;;Total ram usage:        1 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876  00B1                     _SPI0_Initialize:	
   877                           ;psect for function _SPI0_Initialize
   878                           
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _SPI0_Initialize: [wreg+status,2+status,0]
   882                           ;SPI0_Initialize@mode stored from wreg
   883  00B1  00F3               	movwf	SPI0_Initialize@mode
   884  00B2                     l714:
   885                           
   886                           ;spi_dv.c: 4:     TRISC5 = 0;
   887  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   888  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   889  00B4  1287               	bcf	7,5	;volatile
   890  00B5                     l716:
   891                           
   892                           ;spi_dv.c: 5:     SSPSTAT = 0;
   893  00B5  0194               	clrf	20	;volatile
   894  00B6                     l718:
   895                           
   896                           ;spi_dv.c: 6:     SSPCONbits.SSPEN = 1;
   897  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   898  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   899  00B8  1694               	bsf	20,5	;volatile
   900  00B9                     l720:
   901                           
   902                           ;spi_dv.c: 8:     if(mode == MASTER_MODE)
   903  00B9  0373               	decf	SPI0_Initialize@mode,w
   904  00BA  1D03               	btfss	3,2
   905  00BB  28BD               	goto	u11
   906  00BC  28BE               	goto	u10
   907  00BD                     u11:
   908  00BD  28C2               	goto	l77
   909  00BE                     u10:
   910  00BE                     l722:
   911                           
   912                           ;spi_dv.c: 9:         TRISC3 = 0;
   913  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   914  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   915  00C0  1187               	bcf	7,3	;volatile
   916  00C1  28C5               	goto	l79
   917  00C2                     l77:	
   918                           ;spi_dv.c: 10:     else
   919                           
   920                           
   921                           ;spi_dv.c: 11:         TRISC3 = 1;
   922  00C2  1683               	bsf	3,5	;RP0=1, select bank1
   923  00C3  1303               	bcf	3,6	;RP1=0, select bank1
   924  00C4  1587               	bsf	7,3	;volatile
   925  00C5                     l79:
   926  00C5  0008               	return
   927  00C6                     __end_of_SPI0_Initialize:
   928                           
   929                           	psect	text6
   930  001C                     __ptext6:	
   931 ;; *************** function _timer0_isr *****************
   932 ;; Defined at:
   933 ;;		line 7 in file "timer_dv.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0
   949 ;;      Temps:          3       0       0       0       0
   950 ;;      Totals:         3       0       0       0       0
   951 ;;Total ram usage:        3 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		Interrupt level 1
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960  001C                     _timer0_isr:	
   961                           ;psect for function _timer0_isr
   962                           
   963  001C                     i1l834:
   964                           
   965                           ;timer_dv.c: 9:     if(TMR0IF == 1)
   966  001C  1D0B               	btfss	11,2	;volatile
   967  001D  281F               	goto	u11_21
   968  001E  2820               	goto	u11_20
   969  001F                     u11_21:
   970  001F  2852               	goto	i1l51
   971  0020                     u11_20:
   972  0020                     i1l836:
   973                           
   974                           ;timer_dv.c: 10:     {;timer_dv.c: 11:         msCounts++;
   975  0020  3001               	movlw	1
   976  0021  07F8               	addwf	_msCounts,f	;volatile
   977  0022  1803               	skipnc
   978  0023  0AF9               	incf	_msCounts+1,f	;volatile
   979  0024  3000               	movlw	0
   980  0025  07F9               	addwf	_msCounts+1,f	;volatile
   981                           
   982                           ;timer_dv.c: 12:         if(msCounts > delayMS)
   983  0026  0879               	movf	_msCounts+1,w	;volatile
   984  0027  0277               	subwf	_delayMS+1,w	;volatile
   985  0028  1D03               	skipz
   986  0029  282C               	goto	u12_25
   987  002A  0878               	movf	_msCounts,w	;volatile
   988  002B  0276               	subwf	_delayMS,w	;volatile
   989  002C                     u12_25:
   990  002C  1803               	skipnc
   991  002D  282F               	goto	u12_21
   992  002E  2830               	goto	u12_20
   993  002F                     u12_21:
   994  002F  2832               	goto	i1l840
   995  0030                     u12_20:
   996  0030                     i1l838:
   997                           
   998                           ;timer_dv.c: 13:         {;timer_dv.c: 14:             delayMS = 0;
   999  0030  01F6               	clrf	_delayMS	;volatile
  1000  0031  01F7               	clrf	_delayMS+1	;volatile
  1001  0032                     i1l840:
  1002                           
  1003                           ;timer_dv.c: 16:         ledBlinkTimeCounter++;
  1004  0032  3001               	movlw	1
  1005  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0035  07A3               	addwf	_ledBlinkTimeCounter,f	;volatile
  1008  0036  1803               	skipnc
  1009  0037  0AA4               	incf	_ledBlinkTimeCounter+1,f	;volatile
  1010  0038  3000               	movlw	0
  1011  0039  07A4               	addwf	_ledBlinkTimeCounter+1,f	;volatile
  1012  003A                     i1l842:
  1013                           
  1014                           ;timer_dv.c: 17:         if(ledBlinkTimeCounter > 1000)
  1015  003A  3003               	movlw	3
  1016  003B  0224               	subwf	_ledBlinkTimeCounter+1,w	;volatile
  1017  003C  30E9               	movlw	233
  1018  003D  1903               	skipnz
  1019  003E  0223               	subwf	_ledBlinkTimeCounter,w	;volatile
  1020  003F  1C03               	skipc
  1021  0040  2842               	goto	u13_21
  1022  0041  2843               	goto	u13_20
  1023  0042                     u13_21:
  1024  0042  284F               	goto	i1l848
  1025  0043                     u13_20:
  1026  0043                     i1l844:
  1027                           
  1028                           ;timer_dv.c: 18:         {;timer_dv.c: 19:             ledBlinkTimeCounter = 0;
  1029  0043  01A3               	clrf	_ledBlinkTimeCounter	;volatile
  1030  0044  01A4               	clrf	_ledBlinkTimeCounter+1	;volatile
  1031  0045                     i1l846:
  1032                           
  1033                           ;timer_dv.c: 20:             PORTBbits.RB0 ^=1;
  1034  0045  0806               	movf	6,w	;volatile
  1035  0046  3901               	andlw	1
  1036  0047  00F0               	movwf	??_timer0_isr
  1037  0048  3001               	movlw	1
  1038  0049  06F0               	xorwf	??_timer0_isr,f
  1039  004A  0806               	movf	6,w	;volatile
  1040  004B  0670               	xorwf	??_timer0_isr,w
  1041  004C  39FE               	andlw	-2
  1042  004D  0670               	xorwf	??_timer0_isr,w
  1043  004E  0086               	movwf	6	;volatile
  1044  004F                     i1l848:
  1045                           
  1046                           ;timer_dv.c: 22:        TMR0 = (256 - (unsigned char)(((1 * 16000000)/1000)/((32*4)))) +
      +                           1;
  1047  004F  3084               	movlw	132
  1048  0050  0081               	movwf	1	;volatile
  1049  0051                     i1l850:
  1050                           
  1051                           ;timer_dv.c: 23:        TMR0IF = 0;
  1052  0051  110B               	bcf	11,2	;volatile
  1053  0052                     i1l51:
  1054  0052  0872               	movf	??_timer0_isr+2,w
  1055  0053  008A               	movwf	10
  1056  0054  0E71               	swapf	??_timer0_isr+1,w
  1057  0055  0083               	movwf	3
  1058  0056  0EFE               	swapf	btemp,f
  1059  0057  0E7E               	swapf	btemp,w
  1060  0058  0009               	retfie
  1061  0059                     __end_of_timer0_isr:
  1062  007E                     btemp	set	126	;btemp
  1063  007E                     wtemp0	set	126
  1064                           
  1065                           	psect	intentry
  1066  0004                     __pintentry:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _timer0_isr: [wreg+status,2+status,0]
  1069                           
  1070  0004                     interrupt_function:
  1071  007E                     saved_w	set	btemp
  1072  0004  00FE               	movwf	btemp
  1073  0005  0E03               	swapf	3,w
  1074  0006  00F1               	movwf	??_timer0_isr+1
  1075  0007  080A               	movf	10,w
  1076  0008  00F2               	movwf	??_timer0_isr+2
  1077  0009  120A  118A  281C   	ljmp	_timer0_isr
  1078                           
  1079                           	psect	idloc
  1080                           
  1081                           ;Config register IDLOC0 @ 0x2000
  1082                           ;	unspecified, using default values
  1083  2000                     	org	8192
  1084  2000  3FFF               	dw	16383
  1085                           
  1086                           ;Config register IDLOC1 @ 0x2001
  1087                           ;	unspecified, using default values
  1088  2001                     	org	8193
  1089  2001  3FFF               	dw	16383
  1090                           
  1091                           ;Config register IDLOC2 @ 0x2002
  1092                           ;	unspecified, using default values
  1093  2002                     	org	8194
  1094  2002  3FFF               	dw	16383
  1095                           
  1096                           ;Config register IDLOC3 @ 0x2003
  1097                           ;	unspecified, using default values
  1098  2003                     	org	8195
  1099  2003  3FFF               	dw	16383
  1100                           
  1101                           	psect	config
  1102                           
  1103                           ;Config register CONFIG @ 0x2007
  1104                           ;	Oscillator Selection bits
  1105                           ;	FOSC = HS, HS oscillator
  1106                           ;	Watchdog Timer Enable bit
  1107                           ;	WDTE = OFF, WDT disabled
  1108                           ;	Power-up Timer Enable bit
  1109                           ;	PWRTE = OFF, PWRT disabled
  1110                           ;	Brown-out Reset Enable bit
  1111                           ;	BOREN = OFF, BOR disabled
  1112                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1113                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1114                           ;	Data EEPROM Memory Code Protection bit
  1115                           ;	CPD = OFF, Data EEPROM code protection off
  1116                           ;	Flash Program Memory Write Enable bits
  1117                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1118                           ;	In-Circuit Debugger Mode bit
  1119                           ;	DEBUG = 0x1, unprogrammed default
  1120                           ;	Flash Program Memory Code Protection bit
  1121                           ;	CP = OFF, Code protection off
  1122  2007                     	org	8199
  1123  2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      3       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SPI0_Write->_SPI0_SlaveSelect

Critical Paths under _timer0_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SPI0_Write

Critical Paths under _timer0_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     287
                                              2 BANK0      1     1      0
                    _SPI0_Initialize
                         _SPI0_Write
                       _TIMER0_Delay
                  _TIMER0_Initialize
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Delay                                         2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI0_Write                                           2     1      1     174
                                              0 BANK0      2     1      1
                   _SPI0_SlaveSelect
 ---------------------------------------------------------------------------------
 (2) _SPI0_SlaveSelect                                     3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _SPI0_Initialize                                      1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _timer0_isr                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI0_Initialize
   _SPI0_Write
     _SPI0_SlaveSelect
   _TIMER0_Delay
   _TIMER0_Initialize

 _timer0_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue May 31 14:40:59 2022

              _SSPSTATbits 0094                         l60 00EC                         l57 00E0  
                       l90 0099                         l91 009B                         l92 00B0  
                       l77 00C2                         l79 00C5                         l95 00D3  
                       l88 0097                         u10 00BE                         u11 00BD  
                       u90 00E0                         u91 00DF        _ledBlinkTimeCounter 0023  
                      l710 00EA                        l720 00B9                        l712 00EB  
                      l722 00BE                        l714 00B2                        l706 00E1  
                      l716 00B5                        l708 00E9                        l718 00B6  
                      l814 00D4                        l920 00A5                        l816 00D6  
                      l818 00DA                        l872 0091                        l882 00C9  
                      l890 0062                        l876 009D                        l884 00CF  
                      l892 0068                        l894 0075                        l886 0059  
                      l896 007E                        l888 005D                        l898 008B  
                      _GIE 005F                        u140 008B                        u141 008A  
                     _PEIE 005E                       i1l51 0052                       _TMR0 0001  
                     _main 0059                       btemp 007E                       start 000C  
         _SPI0_SlaveSelect 0090                      ?_main 0070                ?_SPI0_Write 0020  
                    i1l840 0032                      i1l850 0051                      i1l842 003A  
                    i1l834 001C                      i1l844 0043                      i1l836 0020  
                    i1l846 0045                      i1l838 0030                      i1l848 004F  
                    u11_20 0020                      u11_21 001F                      u12_20 0030  
                    u12_21 002F                      u12_25 002C                      u13_20 0043  
                    u13_21 0042                      _TRISB 0086                      _TRISD 0088  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 0090                     ??_main 0022  
                   _TMR0IE 005D                     _TMR0IF 005A                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPBUF 0013                     _counts 007A  
                   saved_w 007E          ??_SPI0_Initialize 0073    __end_of__initialization 0018  
           __pcstackCOMMON 0070            SPI0_Write@slave 0021              ?_TIMER0_Delay 0073  
               __pbssBANK0 0023   __end_of_SPI0_SlaveSelect 00B1                 __pmaintext 0059  
               __pintentry 0004               ??_SPI0_Write 0076             ??_TIMER0_Delay 0075  
                  _SSPSTAT 0094         __end_of_SPI0_Write 00D4                    _delayMS 0076  
                  __ptext1 00E1                    __ptext2 00D4                    __ptext3 00C6  
                  __ptext4 0090                    __ptext5 00B1                    __ptext6 001C  
     end_of_initialization 0018      SPI0_SlaveSelect@slave 0075                 _timer0_isr 001C  
                _PORTBbits 0006            _SPI0_Initialize 00B1       __end_of_TIMER0_Delay 00E1  
      start_initialization 000F              SPI0_Write@chr 0020          ?_SPI0_SlaveSelect 0070  
       ??_SPI0_SlaveSelect 0073    __end_of_SPI0_Initialize 00C6                ?_timer0_isr 0070  
              __pbssCOMMON 0076                  ___latbits 0002              __pcstackBANK0 0020  
        interrupt_function 0004           ?_SPI0_Initialize 0070             TIMER0_Delay@ms 0073  
             _TIMER0_Delay 00D4                   _msCounts 0078               ??_timer0_isr 0070  
      SPI0_Initialize@mode 0073          _TIMER0_Initialize 00E1                   intlevel1 0000  
       __end_of_timer0_isr 0059         ?_TIMER0_Initialize 0070        ??_TIMER0_Initialize 0073  
               _OPTION_REG 0081                 _SPI0_Write 00C6  __end_of_TIMER0_Initialize 00ED  
               _SSPCONbits 0014  
