

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue May 31 14:39:47 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001B                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  0081                     	;# 
   157  0085                     	;# 
   158  0086                     	;# 
   159  0087                     	;# 
   160  0088                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009E                     	;# 
   174  009F                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  018C                     	;# 
   180  018D                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000E                     	;# 
   197  000F                     	;# 
   198  0010                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001D                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  0081                     	;# 
   217  0085                     	;# 
   218  0086                     	;# 
   219  0087                     	;# 
   220  0088                     	;# 
   221  0089                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  008E                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0094                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009C                     	;# 
   232  009D                     	;# 
   233  009E                     	;# 
   234  009F                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361  0008                     _PORTDbits	set	8
   362  0001                     _TMR0	set	1
   363  0006                     _PORTBbits	set	6
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCONbits	set	20
   366  0008                     _PORTD	set	8
   367  005E                     _PEIE	set	94
   368  005F                     _GIE	set	95
   369  005D                     _TMR0IE	set	93
   370  005A                     _TMR0IF	set	90
   371  0081                     _OPTION_REG	set	129
   372  0094                     _SSPSTATbits	set	148
   373  0094                     _SSPSTAT	set	148
   374  0088                     _TRISD	set	136
   375  0086                     _TRISBbits	set	134
   376  043B                     _TRISC3	set	1083
   377  043D                     _TRISC5	set	1085
   378                           
   379                           	psect	cinit
   380  000F                     start_initialization:	
   381                           ; #config settings
   382                           
   383  000F                     __initialization:
   384                           
   385                           ; Clear objects allocated to COMMON
   386  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   387  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   388  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   389  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   390                           
   391                           ; Clear objects allocated to BANK0
   392  0013  1283               	bcf	3,5	;RP0=0, select bank0
   393  0014  1303               	bcf	3,6	;RP1=0, select bank0
   394  0015  01A3               	clrf	__pbssBANK0& (0+127)
   395  0016  01A4               	clrf	(__pbssBANK0+1)& (0+127)
   396  0017                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  0017                     __end_of__initialization:
   400  0017  0183               	clrf	3
   401  0018  120A  118A  28EE   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMMON
   404  0077                     __pbssCOMMON:
   405  0077                     _delayMS:
   406  0077                     	ds	2
   407  0079                     _msCounts:
   408  0079                     	ds	2
   409                           
   410                           	psect	bssBANK0
   411  0023                     __pbssBANK0:
   412  0023                     _ledBlinkTimeCounter:
   413  0023                     	ds	2
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_TIMER0_Initialize:
   418  0070                     ?_SPI0_Initialize:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_LCD_Initialize:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_SPI0_ReadyRead:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_LCD_WriteCmd:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_LCD_WriteData:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_SPI0_Read:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_timer0_isr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_timer0_isr:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_LCD_WriteNibble:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 2 bytes @ 0x0
   450  0070                     	ds	3
   451  0073                     ??_TIMER0_Initialize:
   452  0073                     ??_SPI0_Initialize:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ??_SPI0_ReadyRead:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     ??_SPI0_Read:	
   459                           ; 1 bytes @ 0x3
   460                           
   461  0073                     ?_TIMER0_Delay:	
   462                           ; 1 bytes @ 0x3
   463                           
   464  0073                     ??_LCD_WriteNibble:	
   465                           ; 1 bytes @ 0x3
   466                           
   467  0073                     SPI0_Initialize@mode:	
   468                           ; 1 bytes @ 0x3
   469                           
   470  0073                     LCD_WriteNibble@chr:	
   471                           ; 1 bytes @ 0x3
   472                           
   473  0073                     TIMER0_Delay@ms:	
   474                           ; 1 bytes @ 0x3
   475                           
   476                           
   477                           ; 2 bytes @ 0x3
   478  0073                     	ds	2
   479  0075                     ??_TIMER0_Delay:
   480  0075                     ?_LCD_Write:	
   481                           ; 1 bytes @ 0x5
   482                           
   483  0075                     LCD_Write@chr:	
   484                           ; 1 bytes @ 0x5
   485                           
   486                           
   487                           ; 1 bytes @ 0x5
   488  0075                     	ds	1
   489  0076                     ??_LCD_Write:
   490                           
   491                           ; 1 bytes @ 0x6
   492  0076                     	ds	1
   493  0077                     ??_LCD_Initialize:
   494  0077                     ??_main:	
   495                           ; 1 bytes @ 0x7
   496                           
   497                           
   498                           	psect	cstackBANK0
   499  0020                     __pcstackBANK0:	
   500                           ; 1 bytes @ 0x7
   501                           
   502  0020                     LCD_Write@type:
   503                           
   504                           ; 1 bytes @ 0x0
   505  0020                     	ds	1
   506  0021                     ??_LCD_WriteCmd:
   507  0021                     ??_LCD_WriteData:	
   508                           ; 1 bytes @ 0x1
   509                           
   510                           
   511                           ; 1 bytes @ 0x1
   512  0021                     	ds	1
   513  0022                     LCD_WriteCmd@chr:
   514  0022                     LCD_WriteData@chr:	
   515                           ; 1 bytes @ 0x2
   516                           
   517                           
   518                           ; 1 bytes @ 0x2
   519  0022                     	ds	1
   520                           
   521                           	psect	maintext
   522  00EE                     __pmaintext:	
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 24 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  2   24[None  ] int 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : B00/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels required when called: 5
   548 ;; This function calls:
   549 ;;		_LCD_Initialize
   550 ;;		_LCD_WriteCmd
   551 ;;		_LCD_WriteData
   552 ;;		_SPI0_Initialize
   553 ;;		_SPI0_Read
   554 ;;		_SPI0_ReadyRead
   555 ;;		_TIMER0_Initialize
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561  00EE                     _main:	
   562                           ;psect for function _main
   563                           
   564  00EE                     l1023:	
   565                           ;incstack = 0
   566                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   567                           
   568                           
   569                           ;main.c: 26:     TRISBbits.TRISB0 = 0;
   570  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   571  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   572  00F0  1006               	bcf	6,0	;volatile
   573  00F1                     l1025:
   574                           
   575                           ;main.c: 27:     PORTD = 0x00;
   576  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   577  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   578  00F3  0188               	clrf	8	;volatile
   579                           
   580                           ;main.c: 28:     TRISD = 0x00;
   581  00F4  1683               	bsf	3,5	;RP0=1, select bank1
   582  00F5  1303               	bcf	3,6	;RP1=0, select bank1
   583  00F6  0188               	clrf	8	;volatile
   584  00F7                     l1027:
   585                           
   586                           ;main.c: 30:     TIMER0_Initialize();
   587  00F7  120A  118A  2191  120A  118A  	fcall	_TIMER0_Initialize
   588  00FC                     l1029:
   589                           
   590                           ;main.c: 32:     SPI0_Initialize(SLAVE_MODE);
   591  00FC  3000               	movlw	0
   592  00FD  120A  118A  214F  120A  118A  	fcall	_SPI0_Initialize
   593  0102                     l1031:
   594                           
   595                           ;main.c: 34:     LCD_Initialize();
   596  0102  120A  118A  201B  120A  118A  	fcall	_LCD_Initialize
   597  0107                     l1033:
   598                           
   599                           ;main.c: 37:     {;main.c: 38:       if(SPI0_ReadyRead()) {
   600  0107  120A  118A  219D  120A  118A  	fcall	_SPI0_ReadyRead
   601  010C  3A00               	xorlw	0
   602  010D  1903               	skipnz
   603  010E  2910               	goto	u391
   604  010F  2911               	goto	u390
   605  0110                     u391:
   606  0110  2907               	goto	l1033
   607  0111                     u390:
   608  0111                     l1035:
   609                           
   610                           ;main.c: 40:           LCD_WriteCmd(0x80);
   611  0111  3080               	movlw	128
   612  0112  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
   613                           
   614                           ;main.c: 41:           LCD_WriteData(SPI0_Read());
   615  0117  120A  118A  21A7  120A  118A  	fcall	_SPI0_Read
   616  011C  120A  118A  2168  120A  118A  	fcall	_LCD_WriteData
   617  0121  2907               	goto	l1033
   618  0122  120A  118A  280C   	ljmp	start
   619  0125                     __end_of_main:
   620                           
   621                           	psect	text1
   622  0191                     __ptext1:	
   623 ;; *************** function _TIMER0_Initialize *****************
   624 ;; Defined at:
   625 ;;		line 33 in file "timer_dv.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0
   642 ;;      Totals:         0       0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; Hardware stack levels required when called: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653  0191                     _TIMER0_Initialize:	
   654                           ;psect for function _TIMER0_Initialize
   655                           
   656  0191                     l745:	
   657                           ;incstack = 0
   658                           ; Regs used in _TIMER0_Initialize: [wreg]
   659                           
   660                           
   661                           ;timer_dv.c: 35:     OPTION_REG = (1 << 2);
   662  0191  3004               	movlw	4
   663  0192  1683               	bsf	3,5	;RP0=1, select bank1
   664  0193  1303               	bcf	3,6	;RP1=0, select bank1
   665  0194  0081               	movwf	1	;volatile
   666                           
   667                           ;timer_dv.c: 37:     TMR0 = (256 - (unsigned char)(((1 * 16000000)/1000)/((32*4))));
   668  0195  3083               	movlw	131
   669  0196  1283               	bcf	3,5	;RP0=0, select bank0
   670  0197  1303               	bcf	3,6	;RP1=0, select bank0
   671  0198  0081               	movwf	1	;volatile
   672  0199                     l747:
   673                           
   674                           ;timer_dv.c: 39:     TMR0IE = 1;
   675  0199  168B               	bsf	11,5	;volatile
   676  019A                     l749:
   677                           
   678                           ;timer_dv.c: 40:     GIE = 1;
   679  019A  178B               	bsf	11,7	;volatile
   680  019B                     l751:
   681                           
   682                           ;timer_dv.c: 41:     PEIE = 1;
   683  019B  170B               	bsf	11,6	;volatile
   684  019C                     l91:
   685  019C  0008               	return
   686  019D                     __end_of_TIMER0_Initialize:
   687                           
   688                           	psect	text2
   689  019D                     __ptext2:	
   690 ;; *************** function _SPI0_ReadyRead *****************
   691 ;; Defined at:
   692 ;;		line 17 in file "spi_dv.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      unsigned char 
   699 ;; Registers used:
   700 ;;		wreg
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       0       0       0       0
   707 ;;      Locals:         0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0
   709 ;;      Totals:         0       0       0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; Hardware stack levels required when called: 1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720  019D                     _SPI0_ReadyRead:	
   721                           ;psect for function _SPI0_ReadyRead
   722                           
   723  019D                     l799:	
   724                           ;incstack = 0
   725                           ; Regs used in _SPI0_ReadyRead: [wreg]
   726                           
   727                           
   728                           ;spi_dv.c: 19:     if(SSPSTATbits.BF)
   729  019D  1683               	bsf	3,5	;RP0=1, select bank1
   730  019E  1303               	bcf	3,6	;RP1=0, select bank1
   731  019F  1C14               	btfss	20,0	;volatile
   732  01A0  29A2               	goto	u131
   733  01A1  29A3               	goto	u130
   734  01A2                     u131:
   735  01A2  29A5               	goto	l807
   736  01A3                     u130:
   737  01A3                     l801:
   738                           
   739                           ;spi_dv.c: 20:         return 1;
   740  01A3  3001               	movlw	1
   741  01A4  29A6               	goto	l50
   742  01A5                     l807:
   743                           
   744                           ;spi_dv.c: 22:         return 0;
   745  01A5  3000               	movlw	0
   746  01A6                     l50:
   747  01A6  0008               	return
   748  01A7                     __end_of_SPI0_ReadyRead:
   749                           
   750                           	psect	text3
   751  01A7                     __ptext3:	
   752 ;; *************** function _SPI0_Read *****************
   753 ;; Defined at:
   754 ;;		line 24 in file "spi_dv.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      unsigned char 
   761 ;; Registers used:
   762 ;;		wreg
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; Hardware stack levels required when called: 1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782  01A7                     _SPI0_Read:	
   783                           ;psect for function _SPI0_Read
   784                           
   785  01A7                     l811:	
   786                           ;incstack = 0
   787                           ; Regs used in _SPI0_Read: [wreg]
   788                           
   789                           
   790                           ;spi_dv.c: 26:     return SSPBUF;
   791  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   792  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   793  01A9  0813               	movf	19,w	;volatile
   794  01AA                     l54:
   795  01AA  0008               	return
   796  01AB                     __end_of_SPI0_Read:
   797                           
   798                           	psect	text4
   799  014F                     __ptext4:	
   800 ;; *************** function _SPI0_Initialize *****************
   801 ;; Defined at:
   802 ;;		line 3 in file "spi_dv.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  mode            1    wreg     unsigned char 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  mode            1    3[COMMON] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         1       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         1       0       0       0       0
   820 ;;Total ram usage:        1 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; Hardware stack levels required when called: 1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830  014F                     _SPI0_Initialize:	
   831                           ;psect for function _SPI0_Initialize
   832                           
   833                           
   834                           ;incstack = 0
   835                           ; Regs used in _SPI0_Initialize: [wreg+status,2+status,0]
   836                           ;SPI0_Initialize@mode stored from wreg
   837  014F  00F3               	movwf	SPI0_Initialize@mode
   838  0150                     l753:
   839                           
   840                           ;spi_dv.c: 4:     TRISC5 = 0;
   841  0150  1683               	bsf	3,5	;RP0=1, select bank1
   842  0151  1303               	bcf	3,6	;RP1=0, select bank1
   843  0152  1287               	bcf	7,5	;volatile
   844  0153                     l755:
   845                           
   846                           ;spi_dv.c: 5:     SSPSTAT = 0;
   847  0153  0194               	clrf	20	;volatile
   848  0154                     l757:
   849                           
   850                           ;spi_dv.c: 6:     SSPCONbits.SSPEN = 1;
   851  0154  1283               	bcf	3,5	;RP0=0, select bank0
   852  0155  1303               	bcf	3,6	;RP1=0, select bank0
   853  0156  1694               	bsf	20,5	;volatile
   854  0157                     l759:
   855                           
   856                           ;spi_dv.c: 8:     if(mode == MASTER_MODE)
   857  0157  0373               	decf	SPI0_Initialize@mode,w
   858  0158  1D03               	btfss	3,2
   859  0159  295B               	goto	u121
   860  015A  295C               	goto	u120
   861  015B                     u121:
   862  015B  2960               	goto	l763
   863  015C                     u120:
   864  015C                     l761:
   865                           
   866                           ;spi_dv.c: 9:         TRISC3 = 0;
   867  015C  1683               	bsf	3,5	;RP0=1, select bank1
   868  015D  1303               	bcf	3,6	;RP1=0, select bank1
   869  015E  1187               	bcf	7,3	;volatile
   870  015F  2967               	goto	l46
   871  0160                     l763:
   872                           
   873                           ;spi_dv.c: 11:     {;spi_dv.c: 12:          SSPCONbits.SSPM = 4;
   874  0160  0814               	movf	20,w	;volatile
   875  0161  39F0               	andlw	-16
   876  0162  3804               	iorlw	4
   877  0163  0094               	movwf	20	;volatile
   878  0164                     l765:
   879                           
   880                           ;spi_dv.c: 13:         TRISC3 = 1;
   881  0164  1683               	bsf	3,5	;RP0=1, select bank1
   882  0165  1303               	bcf	3,6	;RP1=0, select bank1
   883  0166  1587               	bsf	7,3	;volatile
   884  0167                     l46:
   885  0167  0008               	return
   886  0168                     __end_of_SPI0_Initialize:
   887                           
   888                           	psect	text5
   889  0168                     __ptext5:	
   890 ;; *************** function _LCD_WriteData *****************
   891 ;; Defined at:
   892 ;;		line 35 in file "lcd_dv.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  chr             1    wreg     unsigned char 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  chr             1    2[BANK0 ] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       1       0       0       0
   908 ;;      Temps:          0       1       0       0       0
   909 ;;      Totals:         0       2       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 3
   913 ;; This function calls:
   914 ;;		_LCD_Write
   915 ;; This function is called by:
   916 ;;		_main
   917 ;;		_LCD_WriteBuffer
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921  0168                     _LCD_WriteData:	
   922                           ;psect for function _LCD_WriteData
   923                           
   924                           
   925                           ;incstack = 0
   926                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0+pclath+cstack]
   927                           ;LCD_WriteData@chr stored from wreg
   928  0168  1283               	bcf	3,5	;RP0=0, select bank0
   929  0169  1303               	bcf	3,6	;RP1=0, select bank0
   930  016A  00A2               	movwf	LCD_WriteData@chr
   931  016B                     l1013:
   932                           
   933                           ;lcd_dv.c: 35: void LCD_WriteData(uint8_t chr);lcd_dv.c: 36: {;lcd_dv.c: 37:     LCD_Wri
      +                          te(1,chr);
   934  016B  0822               	movf	LCD_WriteData@chr,w
   935  016C  00A1               	movwf	??_LCD_WriteData
   936  016D  0821               	movf	??_LCD_WriteData,w
   937  016E  00F5               	movwf	LCD_Write@chr
   938  016F  3001               	movlw	1
   939  0170  120A  118A  20B2  120A  118A  	fcall	_LCD_Write
   940  0175                     l113:
   941  0175  0008               	return
   942  0176                     __end_of_LCD_WriteData:
   943                           
   944                           	psect	text6
   945  001B                     __ptext6:	
   946 ;; *************** function _LCD_Initialize *****************
   947 ;; Defined at:
   948 ;;		line 56 in file "lcd_dv.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0
   965 ;;      Totals:         0       0       0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 4
   969 ;; This function calls:
   970 ;;		_LCD_WriteCmd
   971 ;;		_TIMER0_Delay
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977  001B                     _LCD_Initialize:	
   978                           ;psect for function _LCD_Initialize
   979                           
   980  001B                     l981:	
   981                           ;incstack = 0
   982                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
   983                           
   984                           
   985                           ;lcd_dv.c: 58:     TRISD = 0x00;
   986  001B  1683               	bsf	3,5	;RP0=1, select bank1
   987  001C  1303               	bcf	3,6	;RP1=0, select bank1
   988  001D  0188               	clrf	8	;volatile
   989  001E                     l983:
   990                           
   991                           ;lcd_dv.c: 59:     PORTDbits.RD0 = 0;
   992  001E  1283               	bcf	3,5	;RP0=0, select bank0
   993  001F  1303               	bcf	3,6	;RP1=0, select bank0
   994  0020  1008               	bcf	8,0	;volatile
   995  0021                     l985:
   996                           
   997                           ;lcd_dv.c: 60:     PORTDbits.RD1 = 0;
   998  0021  1088               	bcf	8,1	;volatile
   999  0022                     l987:
  1000                           
  1001                           ;lcd_dv.c: 61:     PORTDbits.RD2 = 0;
  1002  0022  1108               	bcf	8,2	;volatile
  1003  0023                     l989:
  1004                           
  1005                           ;lcd_dv.c: 63:     LCD_WriteCmd( 0x03);
  1006  0023  3003               	movlw	3
  1007  0024  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1008  0029                     l991:
  1009                           
  1010                           ;lcd_dv.c: 64:     TIMER0_Delay(10);
  1011  0029  300A               	movlw	10
  1012  002A  00F3               	movwf	TIMER0_Delay@ms
  1013  002B  3000               	movlw	0
  1014  002C  00F4               	movwf	TIMER0_Delay@ms+1
  1015  002D  120A  118A  2184  120A  118A  	fcall	_TIMER0_Delay
  1016  0032                     l993:
  1017                           
  1018                           ;lcd_dv.c: 65:     LCD_WriteCmd( 0x03);
  1019  0032  3003               	movlw	3
  1020  0033  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1021  0038                     l995:
  1022                           
  1023                           ;lcd_dv.c: 66:     TIMER0_Delay(5);
  1024  0038  3005               	movlw	5
  1025  0039  00F3               	movwf	TIMER0_Delay@ms
  1026  003A  3000               	movlw	0
  1027  003B  00F4               	movwf	TIMER0_Delay@ms+1
  1028  003C  120A  118A  2184  120A  118A  	fcall	_TIMER0_Delay
  1029  0041                     l997:
  1030                           
  1031                           ;lcd_dv.c: 67:     LCD_WriteCmd( 0x03);
  1032  0041  3003               	movlw	3
  1033  0042  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1034  0047                     l999:
  1035                           
  1036                           ;lcd_dv.c: 68:     TIMER0_Delay(5);
  1037  0047  3005               	movlw	5
  1038  0048  00F3               	movwf	TIMER0_Delay@ms
  1039  0049  3000               	movlw	0
  1040  004A  00F4               	movwf	TIMER0_Delay@ms+1
  1041  004B  120A  118A  2184  120A  118A  	fcall	_TIMER0_Delay
  1042  0050                     l1001:
  1043                           
  1044                           ;lcd_dv.c: 69:     LCD_WriteCmd( 0x02);
  1045  0050  3002               	movlw	2
  1046  0051  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1047  0056                     l1003:
  1048                           
  1049                           ;lcd_dv.c: 70:     LCD_WriteCmd( 0x28);
  1050  0056  3028               	movlw	40
  1051  0057  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1052  005C                     l1005:
  1053                           
  1054                           ;lcd_dv.c: 73:     LCD_WriteCmd(0x0C);
  1055  005C  300C               	movlw	12
  1056  005D  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1057  0062                     l1007:
  1058                           
  1059                           ;lcd_dv.c: 74:     LCD_WriteCmd(0x06);
  1060  0062  3006               	movlw	6
  1061  0063  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1062  0068                     l1009:
  1063                           
  1064                           ;lcd_dv.c: 75:     LCD_WriteCmd(0x01);
  1065  0068  3001               	movlw	1
  1066  0069  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1067  006E                     l1011:
  1068                           
  1069                           ;lcd_dv.c: 76:     LCD_WriteCmd(0x80);
  1070  006E  3080               	movlw	128
  1071  006F  120A  118A  2176  120A  118A  	fcall	_LCD_WriteCmd
  1072  0074                     l125:
  1073  0074  0008               	return
  1074  0075                     __end_of_LCD_Initialize:
  1075                           
  1076                           	psect	text7
  1077  0176                     __ptext7:	
  1078 ;; *************** function _LCD_WriteCmd *****************
  1079 ;; Defined at:
  1080 ;;		line 30 in file "lcd_dv.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  chr             1    wreg     unsigned char 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  chr             1    2[BANK0 ] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, pclath, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       0       0       0       0
  1095 ;;      Locals:         0       1       0       0       0
  1096 ;;      Temps:          0       1       0       0       0
  1097 ;;      Totals:         0       2       0       0       0
  1098 ;;Total ram usage:        2 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 3
  1101 ;; This function calls:
  1102 ;;		_LCD_Write
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;;		_LCD_Initialize
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109  0176                     _LCD_WriteCmd:	
  1110                           ;psect for function _LCD_WriteCmd
  1111                           
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _LCD_WriteCmd: [wreg+status,2+status,0+pclath+cstack]
  1115                           ;LCD_WriteCmd@chr stored from wreg
  1116  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0178  00A2               	movwf	LCD_WriteCmd@chr
  1119  0179                     l979:
  1120                           
  1121                           ;lcd_dv.c: 30: void LCD_WriteCmd(uint8_t chr);lcd_dv.c: 31: {;lcd_dv.c: 32:     LCD_Writ
      +                          e(0,chr);
  1122  0179  0822               	movf	LCD_WriteCmd@chr,w
  1123  017A  00A1               	movwf	??_LCD_WriteCmd
  1124  017B  0821               	movf	??_LCD_WriteCmd,w
  1125  017C  00F5               	movwf	LCD_Write@chr
  1126  017D  3000               	movlw	0
  1127  017E  120A  118A  20B2  120A  118A  	fcall	_LCD_Write
  1128  0183                     l110:
  1129  0183  0008               	return
  1130  0184                     __end_of_LCD_WriteCmd:
  1131                           
  1132                           	psect	text8
  1133  00B2                     __ptext8:	
  1134 ;; *************** function _LCD_Write *****************
  1135 ;; Defined at:
  1136 ;;		line 13 in file "lcd_dv.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  type            1    wreg     unsigned char 
  1139 ;;  chr             1    5[COMMON] unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  type            1    0[BANK0 ] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0, pclath, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         1       0       0       0       0
  1152 ;;      Locals:         0       1       0       0       0
  1153 ;;      Temps:          1       0       0       0       0
  1154 ;;      Totals:         2       1       0       0       0
  1155 ;;Total ram usage:        3 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 2
  1158 ;; This function calls:
  1159 ;;		_LCD_WriteNibble
  1160 ;;		_TIMER0_Delay
  1161 ;; This function is called by:
  1162 ;;		_LCD_WriteCmd
  1163 ;;		_LCD_WriteData
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167  00B2                     _LCD_Write:	
  1168                           ;psect for function _LCD_Write
  1169                           
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _LCD_Write: [wreg+status,2+status,0+pclath+cstack]
  1173                           ;LCD_Write@type stored from wreg
  1174  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1176  00B4  00A0               	movwf	LCD_Write@type
  1177  00B5                     l967:
  1178                           
  1179                           ;lcd_dv.c: 13: void LCD_Write(uint8_t type,uint8_t chr);lcd_dv.c: 14: {;lcd_dv.c: 15:   
      +                            if(type == 0)
  1180  00B5  0820               	movf	LCD_Write@type,w
  1181  00B6  1D03               	btfss	3,2
  1182  00B7  28B9               	goto	u361
  1183  00B8  28BA               	goto	u360
  1184  00B9                     u361:
  1185  00B9  28BC               	goto	l105
  1186  00BA                     u360:
  1187  00BA                     l969:
  1188                           
  1189                           ;lcd_dv.c: 16:         PORTDbits.RD0 = 0;
  1190  00BA  1008               	bcf	8,0	;volatile
  1191  00BB  28BD               	goto	l106
  1192  00BC                     l105:	
  1193                           ;lcd_dv.c: 17:     else
  1194                           
  1195                           
  1196                           ;lcd_dv.c: 18:         PORTDbits.RD0 = 1;
  1197  00BC  1408               	bsf	8,0	;volatile
  1198  00BD                     l106:
  1199                           
  1200                           ;lcd_dv.c: 20:     PORTDbits.RD2 = 1;
  1201  00BD  1508               	bsf	8,2	;volatile
  1202  00BE                     l971:
  1203                           
  1204                           ;lcd_dv.c: 21:     LCD_WriteNibble (chr >> 4);
  1205  00BE  0875               	movf	LCD_Write@chr,w
  1206  00BF  00F6               	movwf	??_LCD_Write
  1207  00C0  3004               	movlw	4
  1208  00C1                     u375:
  1209  00C1  1003               	clrc
  1210  00C2  0CF6               	rrf	??_LCD_Write,f
  1211  00C3  3EFF               	addlw	-1
  1212  00C4  1D03               	skipz
  1213  00C5  28C1               	goto	u375
  1214  00C6  0876               	movf	??_LCD_Write,w
  1215  00C7  120A  118A  2125  120A  118A  	fcall	_LCD_WriteNibble
  1216  00CC                     l973:
  1217                           
  1218                           ;lcd_dv.c: 22:     PORTDbits.RD2 = 0;
  1219  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1220  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1221  00CE  1108               	bcf	8,2	;volatile
  1222                           
  1223                           ;lcd_dv.c: 23:     TIMER0_Delay(10);
  1224  00CF  300A               	movlw	10
  1225  00D0  00F3               	movwf	TIMER0_Delay@ms
  1226  00D1  3000               	movlw	0
  1227  00D2  00F4               	movwf	TIMER0_Delay@ms+1
  1228  00D3  120A  118A  2184  120A  118A  	fcall	_TIMER0_Delay
  1229  00D8                     l975:
  1230                           
  1231                           ;lcd_dv.c: 24:     PORTDbits.RD2 = 1;
  1232  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1233  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1234  00DA  1508               	bsf	8,2	;volatile
  1235                           
  1236                           ;lcd_dv.c: 25:     LCD_WriteNibble (chr & 0xFF);
  1237  00DB  0875               	movf	LCD_Write@chr,w
  1238  00DC  120A  118A  2125  120A  118A  	fcall	_LCD_WriteNibble
  1239  00E1                     l977:
  1240                           
  1241                           ;lcd_dv.c: 26:     PORTDbits.RD2 = 0;
  1242  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1243  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1244  00E3  1108               	bcf	8,2	;volatile
  1245                           
  1246                           ;lcd_dv.c: 27:     TIMER0_Delay(10);
  1247  00E4  300A               	movlw	10
  1248  00E5  00F3               	movwf	TIMER0_Delay@ms
  1249  00E6  3000               	movlw	0
  1250  00E7  00F4               	movwf	TIMER0_Delay@ms+1
  1251  00E8  120A  118A  2184  120A  118A  	fcall	_TIMER0_Delay
  1252  00ED                     l107:
  1253  00ED  0008               	return
  1254  00EE                     __end_of_LCD_Write:
  1255                           
  1256                           	psect	text9
  1257  0184                     __ptext9:	
  1258 ;; *************** function _TIMER0_Delay *****************
  1259 ;; Defined at:
  1260 ;;		line 27 in file "timer_dv.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  ms              2    3[COMMON] int 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         2       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0
  1277 ;;      Totals:         2       0       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; Hardware stack levels required when called: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_LCD_Write
  1285 ;;		_LCD_Initialize
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289  0184                     _TIMER0_Delay:	
  1290                           ;psect for function _TIMER0_Delay
  1291                           
  1292  0184                     l959:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _TIMER0_Delay: [wreg+status,2+status,0]
  1295                           
  1296                           
  1297                           ;timer_dv.c: 27: void TIMER0_Delay( int ms );timer_dv.c: 28: {;timer_dv.c: 29:     msCou
      +                          nts = 0;
  1298  0184  01F9               	clrf	_msCounts	;volatile
  1299  0185  01FA               	clrf	_msCounts+1	;volatile
  1300  0186                     l961:
  1301                           
  1302                           ;timer_dv.c: 30:     delayMS = ms;
  1303  0186  0874               	movf	TIMER0_Delay@ms+1,w
  1304  0187  00F8               	movwf	_delayMS+1	;volatile
  1305  0188  0873               	movf	TIMER0_Delay@ms,w
  1306  0189  00F7               	movwf	_delayMS	;volatile
  1307  018A                     l963:	
  1308                           ;timer_dv.c: 31:     while(delayMS);
  1309                           
  1310  018A  0877               	movf	_delayMS,w	;volatile
  1311  018B  0478               	iorwf	_delayMS+1,w	;volatile
  1312  018C  1D03               	btfss	3,2
  1313  018D  298F               	goto	u271
  1314  018E  2990               	goto	u270
  1315  018F                     u271:
  1316  018F  298A               	goto	l963
  1317  0190                     u270:
  1318  0190                     l88:
  1319  0190  0008               	return
  1320  0191                     __end_of_TIMER0_Delay:
  1321                           
  1322                           	psect	text10
  1323  0125                     __ptext10:	
  1324 ;; *************** function _LCD_WriteNibble *****************
  1325 ;; Defined at:
  1326 ;;		line 4 in file "lcd_dv.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  chr             1    wreg     unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  chr             1    3[COMMON] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         1       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         1       0       0       0       0
  1344 ;;Total ram usage:        1 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_LCD_Write
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354  0125                     _LCD_WriteNibble:	
  1355                           ;psect for function _LCD_WriteNibble
  1356                           
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _LCD_WriteNibble: [wreg]
  1360                           ;LCD_WriteNibble@chr stored from wreg
  1361  0125  00F3               	movwf	LCD_WriteNibble@chr
  1362  0126                     l965:
  1363                           
  1364                           ;lcd_dv.c: 4: void LCD_WriteNibble(uint8_t chr);lcd_dv.c: 5: {;lcd_dv.c: 6:     PORTDbit
      +                          s.RD4 = chr & 0x01 ? 1:0;
  1365  0126  1873               	btfsc	LCD_WriteNibble@chr,0
  1366  0127  2929               	goto	u281
  1367  0128  292D               	goto	u280
  1368  0129                     u281:
  1369  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1370  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1371  012B  1608               	bsf	8,4	;volatile
  1372  012C  2930               	goto	u294
  1373  012D                     u280:
  1374  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1375  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1376  012F  1208               	bcf	8,4	;volatile
  1377  0130                     u294:
  1378                           
  1379                           ;lcd_dv.c: 7:     PORTDbits.RD5 = chr & 0x02 ? 1:0;
  1380  0130  18F3               	btfsc	LCD_WriteNibble@chr,1
  1381  0131  2933               	goto	u301
  1382  0132  2937               	goto	u300
  1383  0133                     u301:
  1384  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0135  1688               	bsf	8,5	;volatile
  1387  0136  293A               	goto	u314
  1388  0137                     u300:
  1389  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0139  1288               	bcf	8,5	;volatile
  1392  013A                     u314:
  1393                           
  1394                           ;lcd_dv.c: 8:     PORTDbits.RD6 = chr & 0x04 ? 1:0;
  1395  013A  1973               	btfsc	LCD_WriteNibble@chr,2
  1396  013B  293D               	goto	u321
  1397  013C  2941               	goto	u320
  1398  013D                     u321:
  1399  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1400  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1401  013F  1708               	bsf	8,6	;volatile
  1402  0140  2944               	goto	u334
  1403  0141                     u320:
  1404  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0143  1308               	bcf	8,6	;volatile
  1407  0144                     u334:
  1408                           
  1409                           ;lcd_dv.c: 9:     PORTDbits.RD7 = chr & 0x08 ? 1:0;
  1410  0144  19F3               	btfsc	LCD_WriteNibble@chr,3
  1411  0145  2947               	goto	u341
  1412  0146  294B               	goto	u340
  1413  0147                     u341:
  1414  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0149  1788               	bsf	8,7	;volatile
  1417  014A  294E               	goto	u354
  1418  014B                     u340:
  1419  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1420  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1421  014D  1388               	bcf	8,7	;volatile
  1422  014E                     u354:
  1423  014E                     l102:
  1424  014E  0008               	return
  1425  014F                     __end_of_LCD_WriteNibble:
  1426                           
  1427                           	psect	text11
  1428  0075                     __ptext11:	
  1429 ;; *************** function _timer0_isr *****************
  1430 ;; Defined at:
  1431 ;;		line 7 in file "timer_dv.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          3       0       0       0       0
  1448 ;;      Totals:         3       0       0       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		Interrupt level 1
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458  0075                     _timer0_isr:	
  1459                           ;psect for function _timer0_isr
  1460                           
  1461  0075                     i1l937:
  1462                           
  1463                           ;timer_dv.c: 9:     if(TMR0IF == 1)
  1464  0075  1D0B               	btfss	11,2	;volatile
  1465  0076  2878               	goto	u24_21
  1466  0077  2879               	goto	u24_20
  1467  0078                     u24_21:
  1468  0078  28AB               	goto	i1l82
  1469  0079                     u24_20:
  1470  0079                     i1l939:
  1471                           
  1472                           ;timer_dv.c: 10:     {;timer_dv.c: 11:         msCounts++;
  1473  0079  3001               	movlw	1
  1474  007A  07F9               	addwf	_msCounts,f	;volatile
  1475  007B  1803               	skipnc
  1476  007C  0AFA               	incf	_msCounts+1,f	;volatile
  1477  007D  3000               	movlw	0
  1478  007E  07FA               	addwf	_msCounts+1,f	;volatile
  1479                           
  1480                           ;timer_dv.c: 12:         if(msCounts > delayMS)
  1481  007F  087A               	movf	_msCounts+1,w	;volatile
  1482  0080  0278               	subwf	_delayMS+1,w	;volatile
  1483  0081  1D03               	skipz
  1484  0082  2885               	goto	u25_25
  1485  0083  0879               	movf	_msCounts,w	;volatile
  1486  0084  0277               	subwf	_delayMS,w	;volatile
  1487  0085                     u25_25:
  1488  0085  1803               	skipnc
  1489  0086  2888               	goto	u25_21
  1490  0087  2889               	goto	u25_20
  1491  0088                     u25_21:
  1492  0088  288B               	goto	i1l943
  1493  0089                     u25_20:
  1494  0089                     i1l941:
  1495                           
  1496                           ;timer_dv.c: 13:         {;timer_dv.c: 14:             delayMS = 0;
  1497  0089  01F7               	clrf	_delayMS	;volatile
  1498  008A  01F8               	clrf	_delayMS+1	;volatile
  1499  008B                     i1l943:
  1500                           
  1501                           ;timer_dv.c: 16:         ledBlinkTimeCounter++;
  1502  008B  3001               	movlw	1
  1503  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1504  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1505  008E  07A3               	addwf	_ledBlinkTimeCounter,f	;volatile
  1506  008F  1803               	skipnc
  1507  0090  0AA4               	incf	_ledBlinkTimeCounter+1,f	;volatile
  1508  0091  3000               	movlw	0
  1509  0092  07A4               	addwf	_ledBlinkTimeCounter+1,f	;volatile
  1510  0093                     i1l945:
  1511                           
  1512                           ;timer_dv.c: 17:         if(ledBlinkTimeCounter > 1000)
  1513  0093  3003               	movlw	3
  1514  0094  0224               	subwf	_ledBlinkTimeCounter+1,w	;volatile
  1515  0095  30E9               	movlw	233
  1516  0096  1903               	skipnz
  1517  0097  0223               	subwf	_ledBlinkTimeCounter,w	;volatile
  1518  0098  1C03               	skipc
  1519  0099  289B               	goto	u26_21
  1520  009A  289C               	goto	u26_20
  1521  009B                     u26_21:
  1522  009B  28A8               	goto	i1l951
  1523  009C                     u26_20:
  1524  009C                     i1l947:
  1525                           
  1526                           ;timer_dv.c: 18:         {;timer_dv.c: 19:             ledBlinkTimeCounter = 0;
  1527  009C  01A3               	clrf	_ledBlinkTimeCounter	;volatile
  1528  009D  01A4               	clrf	_ledBlinkTimeCounter+1	;volatile
  1529  009E                     i1l949:
  1530                           
  1531                           ;timer_dv.c: 20:             PORTBbits.RB0 ^=1;
  1532  009E  0806               	movf	6,w	;volatile
  1533  009F  3901               	andlw	1
  1534  00A0  00F0               	movwf	??_timer0_isr
  1535  00A1  3001               	movlw	1
  1536  00A2  06F0               	xorwf	??_timer0_isr,f
  1537  00A3  0806               	movf	6,w	;volatile
  1538  00A4  0670               	xorwf	??_timer0_isr,w
  1539  00A5  39FE               	andlw	-2
  1540  00A6  0670               	xorwf	??_timer0_isr,w
  1541  00A7  0086               	movwf	6	;volatile
  1542  00A8                     i1l951:
  1543                           
  1544                           ;timer_dv.c: 22:        TMR0 = (256 - (unsigned char)(((1 * 16000000)/1000)/((32*4)))) +
      +                           1;
  1545  00A8  3084               	movlw	132
  1546  00A9  0081               	movwf	1	;volatile
  1547  00AA                     i1l953:
  1548                           
  1549                           ;timer_dv.c: 23:        TMR0IF = 0;
  1550  00AA  110B               	bcf	11,2	;volatile
  1551  00AB                     i1l82:
  1552  00AB  0872               	movf	??_timer0_isr+2,w
  1553  00AC  008A               	movwf	10
  1554  00AD  0E71               	swapf	??_timer0_isr+1,w
  1555  00AE  0083               	movwf	3
  1556  00AF  0EFE               	swapf	btemp,f
  1557  00B0  0E7E               	swapf	btemp,w
  1558  00B1  0009               	retfie
  1559  00B2                     __end_of_timer0_isr:
  1560  007E                     btemp	set	126	;btemp
  1561  007E                     wtemp0	set	126
  1562                           
  1563                           	psect	intentry
  1564  0004                     __pintentry:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _timer0_isr: [wreg+status,2+status,0]
  1567                           
  1568  0004                     interrupt_function:
  1569  007E                     saved_w	set	btemp
  1570  0004  00FE               	movwf	btemp
  1571  0005  0E03               	swapf	3,w
  1572  0006  00F1               	movwf	??_timer0_isr+1
  1573  0007  080A               	movf	10,w
  1574  0008  00F2               	movwf	??_timer0_isr+2
  1575  0009  120A  118A  2875   	ljmp	_timer0_isr
  1576                           
  1577                           	psect	idloc
  1578                           
  1579                           ;Config register IDLOC0 @ 0x2000
  1580                           ;	unspecified, using default values
  1581  2000                     	org	8192
  1582  2000  3FFF               	dw	16383
  1583                           
  1584                           ;Config register IDLOC1 @ 0x2001
  1585                           ;	unspecified, using default values
  1586  2001                     	org	8193
  1587  2001  3FFF               	dw	16383
  1588                           
  1589                           ;Config register IDLOC2 @ 0x2002
  1590                           ;	unspecified, using default values
  1591  2002                     	org	8194
  1592  2002  3FFF               	dw	16383
  1593                           
  1594                           ;Config register IDLOC3 @ 0x2003
  1595                           ;	unspecified, using default values
  1596  2003                     	org	8195
  1597  2003  3FFF               	dw	16383
  1598                           
  1599                           	psect	config
  1600                           
  1601                           ;Config register CONFIG @ 0x2007
  1602                           ;	Oscillator Selection bits
  1603                           ;	FOSC = HS, HS oscillator
  1604                           ;	Watchdog Timer Enable bit
  1605                           ;	WDTE = OFF, WDT disabled
  1606                           ;	Power-up Timer Enable bit
  1607                           ;	PWRTE = OFF, PWRT disabled
  1608                           ;	Brown-out Reset Enable bit
  1609                           ;	BOREN = OFF, BOR disabled
  1610                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1611                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1612                           ;	Data EEPROM Memory Code Protection bit
  1613                           ;	CPD = OFF, Data EEPROM code protection off
  1614                           ;	Flash Program Memory Write Enable bits
  1615                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1616                           ;	In-Circuit Debugger Mode bit
  1617                           ;	DEBUG = 0x1, unprogrammed default
  1618                           ;	Flash Program Memory Code Protection bit
  1619                           ;	CP = OFF, Code protection off
  1620  2007                     	org	8199
  1621  2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      3       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCD_WriteData->_LCD_Write
    _LCD_WriteCmd->_LCD_Write
    _LCD_Write->_TIMER0_Delay

Critical Paths under _timer0_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_WriteCmd
    _main->_LCD_WriteData
    _LCD_WriteData->_LCD_Write
    _LCD_Initialize->_LCD_WriteCmd
    _LCD_WriteCmd->_LCD_Write

Critical Paths under _timer0_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer0_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer0_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer0_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3115
                     _LCD_Initialize
                       _LCD_WriteCmd
                      _LCD_WriteData
                    _SPI0_Initialize
                          _SPI0_Read
                     _SPI0_ReadyRead
                  _TIMER0_Initialize
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI0_ReadyRead                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI0_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI0_Initialize                                      1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteData                                        2     2      0     873
                                              1 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       0     0      0    1354
                       _LCD_WriteCmd
                       _TIMER0_Delay
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteCmd                                         2     2      0     873
                                              1 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     2      1     842
                                              5 COMMON     2     1      1
                                              0 BANK0      1     1      0
                    _LCD_WriteNibble
                       _TIMER0_Delay
 ---------------------------------------------------------------------------------
 (3) _TIMER0_Delay                                         2     0      2     481
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteNibble                                      1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer0_isr                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Initialize
     _LCD_WriteCmd
       _LCD_Write
         _LCD_WriteNibble
         _TIMER0_Delay
     _TIMER0_Delay
   _LCD_WriteCmd
   _LCD_WriteData
     _LCD_Write
   _SPI0_Initialize
   _SPI0_Read
   _SPI0_ReadyRead
   _TIMER0_Initialize

 _timer0_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue May 31 14:39:47 2022

           _LCD_Initialize 001B                _SSPSTATbits 0094                         l50 01A6  
                       l46 0167                         l54 01AA                         l91 019C  
                       l88 0190        _ledBlinkTimeCounter 0023                        l102 014E  
                      l110 0183                        l105 00BC                        l113 0175  
                      l106 00BD                        l107 00ED                        l125 0074  
                      l801 01A3                        l811 01A7                        l807 01A5  
                      l751 019B                        l761 015C                        l753 0150  
                      l745 0191                        l763 0160                        l755 0153  
                      l747 0199                        l765 0164                        l757 0154  
                      l749 019A                        l759 0157                        l961 0186  
                      l963 018A                        l971 00BE                        l965 0126  
                      l973 00CC                        l981 001B                        l959 0184  
                      l975 00D8                        l967 00B5                        l991 0029  
                      l983 001E                        l799 019D                        l977 00E1  
                      l969 00BA                        l993 0032                        l985 0021  
                      l979 0179                        l995 0038                        l987 0022  
                      _GIE 005F                        l997 0041                        l989 0023  
                      l999 0047                        u120 015C                        u121 015B  
                      u130 01A3                        u131 01A2                        u300 0137  
                      u301 0133                        u320 0141                        u321 013D  
                      u314 013A                        u340 014B                        u341 0147  
                      u334 0144                        u270 0190                        u271 018F  
                      u280 012D                        u360 00BA          ??_LCD_WriteNibble 0073  
                      u281 0129                        u361 00B9                        u354 014E  
                      u294 0130                        u390 0111                        u375 00C1  
                      u391 0110                       l1001 0050                       l1011 006E  
                     l1003 0056                       l1005 005C                       l1013 016B  
                     l1007 0062                       l1031 0102                       l1023 00EE  
                     l1009 0068                       l1033 0107                       l1025 00F1  
                     l1035 0111                       l1027 00F7                       l1029 00FC  
                     _PEIE 005E                       i1l82 00AB                       _TMR0 0001  
                     _main 00EE                       btemp 007E                       start 000C  
            ?_LCD_WriteCmd 0070     __end_of_LCD_Initialize 0075              _LCD_WriteData 0168  
                    ?_main 0070                      i1l941 0089                      i1l951 00A8  
                    i1l943 008B                      i1l953 00AA                      i1l945 0093  
                    i1l937 0075                      i1l947 009C                      i1l939 0079  
                    i1l949 009E                      u24_20 0079                      u24_21 0078  
                    u25_20 0089                      u25_21 0088                      u25_25 0085  
                    u26_20 009C                      u26_21 009B                      _PORTD 0008  
                    _TRISD 0088                      pclath 000A                      status 0003  
                    wtemp0 007E             ??_LCD_WriteCmd 0021             ?_LCD_WriteData 0070  
          ?_LCD_Initialize 0070            __initialization 000F               __end_of_main 0125  
                   ??_main 0077          __end_of_LCD_Write 00EE                     _TMR0IE 005D  
                   _TMR0IF 005A                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPBUF 0013          __end_of_SPI0_Read 01AB               LCD_Write@chr 0075  
         LCD_WriteData@chr 0022                     saved_w 007E          ??_SPI0_Initialize 0073  
           _SPI0_ReadyRead 019D    __end_of__initialization 0017            ??_LCD_WriteData 0021  
          _LCD_WriteNibble 0125             __pcstackCOMMON 0070       __end_of_LCD_WriteCmd 0184  
   __end_of_SPI0_ReadyRead 01A7              ?_TIMER0_Delay 0073                 __pbssBANK0 0023  
               __pmaintext 00EE                 __pintentry 0004             ??_TIMER0_Delay 0075  
          ?_SPI0_ReadyRead 0070                    _SSPSTAT 0094    __end_of_LCD_WriteNibble 014F  
         ??_LCD_Initialize 0077              LCD_Write@type 0020                    _delayMS 0077  
                  __ptext1 0191                    __ptext2 019D                    __ptext3 01A7  
                  __ptext4 014F                    __ptext5 0168                    __ptext6 001B  
                  __ptext7 0176                    __ptext8 00B2                    __ptext9 0184  
                _LCD_Write 00B2       end_of_initialization 0017                 _timer0_isr 0075  
                _SPI0_Read 01A7                  _PORTBbits 0006                  _PORTDbits 0008  
          _SPI0_Initialize 014F                  _TRISBbits 0086                 ?_LCD_Write 0075  
         ?_LCD_WriteNibble 0070               _LCD_WriteCmd 0176       __end_of_TIMER0_Delay 0191  
               ?_SPI0_Read 0070        start_initialization 000F      __end_of_LCD_WriteData 0176  
          LCD_WriteCmd@chr 0022    __end_of_SPI0_Initialize 0168                ?_timer0_isr 0070  
         ??_SPI0_ReadyRead 0073                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020                ??_LCD_Write 0076                ??_SPI0_Read 0073  
        interrupt_function 0004           ?_SPI0_Initialize 0070             TIMER0_Delay@ms 0073  
             _TIMER0_Delay 0184                   __ptext10 0125                   __ptext11 0075  
                 _msCounts 0079               ??_timer0_isr 0070        SPI0_Initialize@mode 0073  
        _TIMER0_Initialize 0191         LCD_WriteNibble@chr 0073                   intlevel1 0000  
       __end_of_timer0_isr 00B2         ?_TIMER0_Initialize 0070        ??_TIMER0_Initialize 0073  
               _OPTION_REG 0081  __end_of_TIMER0_Initialize 019D                 _SSPCONbits 0014  
